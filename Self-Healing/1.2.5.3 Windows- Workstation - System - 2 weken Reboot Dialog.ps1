#requires -Modules ScheduledTasks
#requires -Version 3.0
#requires -RunAsAdministrator
$
$
Function Create-Scriptfile {
    mkdir C:\temp -Force -ErrorAction SilentlyContinue
    $scriptfile = "C:\temp\1.2.5.3.ps1"
    $scriptencoded = "RnVuY3Rpb24gQ3JlYXRlLUZvdXJ0b3BEaWFsb2cgCnsKICAgIHBhcmFtKAoJCSRXaW5kb3dUaXRsZSwKCQkkVGl0bGVCbG9jaywKICAgICAgICAkTWVzc2FnZUJsb2NrLCAgICAgICAgCiAgICAgICAgJEJ1dHRvbjFUZXh0LAogICAgICAgICRCdXR0b24xVG9vbHRpcCwgCiAgICAgICAgJEJ1dHRvbjFGdW5jdGlvbiwgICAgICAKICAgICAgICAkQnV0dG9uMlRleHQsCiAgICAgICAgJEJ1dHRvbjJUb29sdGlwLAogICAgICAgICRCdXR0b24yRnVuY3Rpb24sCiAgICAgICAgJEJ1dHRvbjNUb29sdGlwLAogICAgICAgICRCdXR0b24zRnVuY3Rpb24sCiAgICAgICAgJEJ1dHRvbjRUb29sdGlwLAogICAgICAgICRCdXR0b240RnVuY3Rpb24sCiAgICAgICAgJEV4aXRGdW5jdGlvbgoJKQoKJHVpSGFzaCA9IFtoYXNodGFibGVdOjpTeW5jaHJvbml6ZWQoQHt9KQojZW5kcmVnaW9uCjwjCiNyZWdpb24gU3RhcnR1cCBDaGVja3MgYW5kIGNvbmZpZ3VyYXRpb25zCiNWYWxpZGF0ZSB1c2VyIGlzIGFuIEFkbWluaXN0cmF0b3IKV3JpdGUtVmVyYm9zZSAiQ2hlY2tpbmcgQWRtaW5pc3RyYXRvciBjcmVkZW50aWFscyIKSWYgKC1OT1QgKFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c1ByaW5jaXBhbF0gW1NlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzSWRlbnRpdHldOjpHZXRDdXJyZW50KCkpLklzSW5Sb2xlKGAKICAgIFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c0J1aWx0SW5Sb2xlXSAiQWRtaW5pc3RyYXRvciIpKSB7CiAgICBTdGFydC1Qcm9jZXNzIC1WZXJiICJSdW5hcyIgLUZpbGUgUG93ZXJTaGVsbC5leGUgLUFyZ3VtZW50ICItU1RBIC1ub3Byb2ZpbGUgLWZpbGUgYCIkKCRteWludm9jYXRpb24ubXljb21tYW5kLmRlZmluaXRpb24pYCIiCiAgICBCcmVhawp9CiM+CgoKU2V0LUxvY2F0aW9uICQoU3BsaXQtUGF0aCAkc2NyaXB0Ok15SW52b2NhdGlvbi5NeUNvbW1hbmQuUGF0aCkKJEdsb2JhbDpQYXRoID0gJChTcGxpdC1QYXRoICRzY3JpcHQ6TXlJbnZvY2F0aW9uLk15Q29tbWFuZC5QYXRoKQokR2xvYmFsOkNvbXB1dGVyTmFtZSA9ICRlbnY6Q09NUFVURVJOQU1FCgoKI0xvYWQgUmVxdWlyZWQgQXNzZW1ibGllcwpBZGQtVHlwZSAtYXNzZW1ibHlOYW1lIFByZXNlbnRhdGlvbkZyYW1ld29yawpBZGQtVHlwZSAtYXNzZW1ibHlOYW1lIFByZXNlbnRhdGlvbkNvcmUKQWRkLVR5cGUgLWFzc2VtYmx5TmFtZSBXaW5kb3dzQmFzZQpBZGQtVHlwZSAtYXNzZW1ibHlOYW1lIE1pY3Jvc29mdC5WaXN1YWxCYXNpYwpBZGQtVHlwZSAtYXNzZW1ibHlOYW1lIFN5c3RlbS5XaW5kb3dzLkZvcm1zCgokYmFzZTY0aWNvbiA9ICdpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBT1FBQUFFZkNBWUFBQUJSZFdyakFBQXFiVWxFUVZSNEFlM0JDWnlkZFdIdi84LzNkODZaTFpPVjdDRUpXU0FyaEUzWk4xbGtLNElhRUxVcXJ2ZUNjT3ZGcTlhckhWTnRyN1pVckxTMjBxdlZxbFdKbHF0L0ZYRXBxQ3dpQkRDQmhMQWtJZHRrbVd3emsyU1djNTd2LzNWbUVoSVFyV1RPOEp6bjhIdS9aWnNvaXFwRElJcWlxcEVuZWg1SnV1MjIyOEttVFp2eTlmWDF5ZnZlOTc2aWJSTkZMd1BaNXBYZ0l4KzVkWGpuam0yek85dTc1dTlxMzMzRTl1MDdKcFNLSGwwcUpzUGIyenVhOXV6ZTI0QlZqeFFNQWd1RG9HU3BLT2lCWkc5alUxUEg4R0hOdTNLRjNMWmNDT3VIajJwZU5YeDQwOHFSWThjLy9mblBYOTlPRkEyQWJGTnJicjU1Y2VQVFM1K1p2M1g3empPMnRlMDRic2VPOXVtN2RuV082ZWt1RFUxS3hRWkxkY0o1bXdBRVFQUVR2NS9wbHdBR1NrQlJxQnU1dTVBdmRPVHI4bHVHRG0xOGR1U0lvY3RISGpicy90R1R4ajc4eFM5K2VCZFI5RWVTYldyQmpUZCtkdktHWjlyTzI3aHg2MnMyYjI2YnQzdjNudkZKaVdaQmc2VWNKb0NSREFJYnNPaG5EcDFBSUF3b3dTNFp1a0Y3OHZuOHRxWWhqV3ZHakJueDhQaEpvKzRjTlc3SWtpOStzV1VQVWZSN3lEWlpkZU4xbjUyOGZNWHFQOW5VMm5iUnJwMmRzN3U3ZWtZRFF5em5BV0dRaEFFQk5pQWpSSmt0d0lBWkdDR1pNcHMra3JBeGtDQzZnZmI2K3NMRzBhTkhQRHJwOExFL21EWjd5bDAzMy94bk80bWlnOGcyV2JKbzBSZWFseTFaZGQ3YU5Wc1didDI2L2ZpZTdwNEpSczNZT2NvRUdDUmhHNGsrdGlpVDZHTWJSRDlUQWFKTW9vOHh6N0dRaExGbGVnMGRkZlg1ZFllTkdmbkE5SmxURjUvNW12SDNYSC85OWQxRXIzaXlUUmE4NXoxL2MvaFRqejI1Y09PR3RpczZPN3BuQzQ5QXpnT3l6ZThqQ1JBMmZTVFR6NVFad0ZTQUtKTUFESWd5QTZKTWdMRU5DTUNDSG9KMk5EWFZyNWg2eElUdnpaODc3ZmJQZmZIRGE0bGVzV1NiYW5idHUvNW0xaU9QckxobTQ0WXRGL2YyRm84QWhtQ0N4SE5zQTZLZktaT0ViVUNVU1dBREdCQ1NLTE1ObUlvU0NHSFRSNktQelFFeVlJU3dsUUNkRGZXRlo4ZE5HSFhIbkhrenZ2cmxyN2NzSjNyRmtXMnEwYnZmL2VtWmp5OVpjVTFyYTl2bHZUM0ZhYllhd0FJamlUTGJIQ0FPRUJLQUtiUE5BZUozbVlFVC9ReWluOFYra3JBTjRpQUdpd05zUkZjK1gxZzNZZnhoZHg1ejNJei8reTlmYlZsSzlJb2gyMVNUNjY1Wk5QNlJaYXV2YVYzZmRuVlBUMmtHSkkwMjRqbm1EeFBQWjM2WEFGTlpvcDg1UUlEcEovcVpmcUtmQVFIbUlFYnFMdVJ6ejQ2Yk1Qby9qanY1cUM5OThZc2ZlNGFvNXNrMjFXRFJvcTgwL09SNzkxeStmc09tYTN0N2k4Y0tOd095QWN3cmxFRjdHeHJyVng0eGJlTC9QZXVDTTc3ZTB2S1dkcUthSmR1azdZMlhmUGpFcFk4OTlXZWQ3YnZQQnc2VHlJRXhCb3RJaVdEWGlKSERmalYzM2hFM2YrY0hOLzNDdG9scWpteVRsdXV1VzlUOHdDOVd2bTN6cHUzWEppVWZhYWlqajBIME02OTRrckFOcUJnQ2E4ZFBHdjJ2WjE5dy9EL2ZkTk9OYlVRMVJiWkp3d1huWEhmc00wK3UvMkRYM3E2TERDUEFBUUlZSlBvWWcwMTBNQm1wczNsSXcwL216WjM1ZjI2Lzg2WWxSRFZEdG5rNUxWNjhPUGUzZi9XRE4yNVl1K1ZEa013M3JnUFJ4NkpNb284TllNQzhZb2wrcG84a2JCRHVSV0hacENualAzUEpGZE8rMDlMU2toQmxubXp6Y25uM2xZdEcvWHJKc3ZmdjJOSCtYaE1tWUFYSjJLYWZrSXd4L1FRMnIyZ1NmV3hBU01JMllKQVN3Zm9SSTRiZGN2SHBKLzNUMy83YkIzY1RaWnBzODNLNDdMVWZuTDEwNmNxUDluVDF2QTU1S0VoWVNBREdGbUFrc0FHWlB1WVZ6UUFTWldJZkF3akpHQ3pZMFR4c3lGZG5MNWp5bWU5OTczT2JpVEpMdGhsc3A1MzBybFBXcjI1ZDFOdGJPaE9vQi9NOEVwaDlUUFFpSk1CZ0FIRXdDUnZ2eWVmejM1a3paOUtpTzMveEw2dUpNa20yR1V3bkhmdjJTOWM5MjlvQ0hBdmtpU3BPRWpaZ2R5SDljTUxoSXorK1pObTNWaEJsam13elNIVHM3RGUvWmN1V2JSL0RuZ25raUFhSjJFL1FiZlB6U1pOR2ZlekJ4Ny81Q0ZHbUJBYkJva1dMd3V4cHIzL0hsaTNiL2hMN1NDQkhORWdFQWtRZnkvVVM1Mi9jdVAzdlRsancxcE9KTWtXMnFhUXJyN3d5dCt5aDVKMjdkclovRElmRElRbEVMeE9CVEI5VFJMcDM0b1JSSDM3bzhXOCtRSlFKZ2NyU3NnZUs3MnpmMmZGeEVRNUhEa1F2QTRFRU1saGdBY29MVG0xdDNmNS9qai82NmhPSk1pRlFRWE9PZU1QVnV6bzYvOXd3Q1FqMEVkRmdFcElRQXNUQkRBWHMwemV2My9icEU0NTV5d2xFVlM5UUlhOWE4S2VYdGJkM2ZseUVxWmhnR3lHaVFTWUEwOGYwa1lRRUFwQUtvRE5iMTdkOTh2ajViNTFMVk5VQ0ZYREtjZGVjdlhIdGxoYWJJMjBIK2hnN0FVdzBpR3hzWXhzd1piYXhqVzM2U0FWWjUyN2UyUGFKMDQ1LzkxU2lxaFVZb0xOT2VjK2NaOWRzL04vR3g0QnpZTUJFTHpmVHo0RFp6ellHREhXUVhMcDIzYnFQWDN6eERXT0lxbEpnQUs2OCtLTmpWajI5L3MvQlp3QjVvdXBrVTJiVFdDcjVxc2VXUFAzaDY2NWMxRXhVZFFLSDZJWWJicWwvOE9IZmZxQlVUQzRINm9tcWxnUVNTQUdoSWFXZTBqVjNQYmowMml1dlhKd2pxaXFCUS9UekgvN3l6VDA5dmU4QU54TlZOUU0yKzhrd2N0ZXV6dmMvK2R2RmJ5YXFLb0ZEY01hSjd6eHA1L1pkMTlzYUI0aW91dGtnQThZMmdDQk1hbXRydi9Hc1Y3LzdUS0txRVhpSnJyenlvMk9lZmJiMVJtQStFSWlxbndDTWJjb2tZVHNraWVldFdiUHh3Mis3OHVQVGlLcEM0S1hSMHQrc2ZGK3hWSHF0cFFJaXlnQWhRSUFBWVJMQUFQbGlzWFRPUTBzZS94ODMzN3k0a1NoMWdaZmc1T091T2E5alYrZmJnS0VnaEVCRVZjNDJtQU5zd0lBeGJ0aTFzL05OdDMvcnpyY1FwUzd3UjNyelpZdEdiMWpYZXAxSnBna0pnMjB3VVNZWU1HQkFIQ0RoTUdiTnFvMy8vYis5NjY5T0pFcFY0SS8weU5MZnZxTlVTczVDeWxNbWd3QkVsR0VHbTFBc2x1Yi8rdDZsMTk1MDA5ZUdFS1VtOEVlNDdMdy9lMVY3Kys0L0JRM0hBUnZBaUNqekJHQ0F1aTJiZDE1ODMzOHVld05SYWdML2hmZTk3OWJDRTArdWVSZG1GbGhnUUdCaERKZ293MnlRUVpTTldiYnN5WGNzV3ZUbGlVU3BDUHdYSGx2eW13dDJkM1pkaUtpamp3RURCaE5sbmdBQlJpTHMyYjNuK0YvOTdJR3JpVklSK0FOdXVPR1dZUnZXYlhxWHpTUkFrZ0NCREFJUUlLSmFJR3dCR3JacTFjWTNmdngvL2NNMG9wZGQ0QTk0NVA1SEwrL3A2VDBOa3J3TklDUUFFZFVJbVQ0V0lBenEydHM3NzRFSGxsOU45TElML0I0ZitNRG5ScXhidStsTndHajJNY1lBQmd4Z3dGUS9BUUlCNGprU0lQWVJrcEFBQVFna2tBRHhld2trc3N2MGtZeGsraVhOenp5OS9uVWYvOUN0TTRoZVZvSGY0K0g3SHIrc3Q2ZDRBampReDJDRERaanNFU0FPRUJEQUFna0pRRUJBaUg0Q1JKa0VTRUFBQWlENldFQkFDb0FBQVFFSVNBSlIvUXltekFnQmFHOVg5NXpmL25iRm00aGVWb0VYc1dqUjUwYXNYN2ZwS2t1SGdhZ1pGbGhJb3N3R0VOZ1lZNXZueUFqQTlESDlKSjVIQWpBSENFbElaSXZCbEJsUjV1Wm5ubDc3Si8vNGQvOCtsZWhsRTNnUnk1ZHN2S2lydStjRVRJNGFaTE5QQWpMN1NRYU16VDRHREpnK05yWUJBNmFmc1kwTmtrREdKSUF4Z0tsNmtwQUVOcllCSWFSZE8zZlB2di9YSzk1STlMTEo4d0szM3Jxa3NQTEp0VmM0MFdndzJTZEFTQUFHakIwQUFRbGdKTWdYQ3FYNit2cmVFRUpQYzNORDcraXhJMHE5M1VXMmJOMmU3KzBwNXBPRXV1NnU3cnJlM3Q0Z2dRRU1Ob0FBMDg5Z01HVUNCSmpxWmc1bTA4ZjIwQlVyVmwzeWIvOTIrMWZlOXJZcnRoRU51and2c095UnUwN2J2bTNYaWNnNXlreTJ5WWgrSnFGTU1ybGNyalJpeE5DT2FUTU8zempsaUhIckprOGV2MjdjK01NMjVlc0tPNGNNcWVzWU9XTEUzbUt4Tit6WTF0SFExZHM3SkNtV0R0dTB1VzNDTTArdW03QnU3ZWFwRzladm1iaHRXM3R6VW5JT0RCZ0RRcGg5WkRCVnp6WmxrckJObVNSTUV0cTI3cGozMndkWFg4VGIrRHJSb012ekFrc2ZlZXFOcGFJbklpT0V5VGdMQzdCQjhvamh3L2JNbm5mRTA4Y2VkOVNqcytaTWZXaks1UEcvR1ROaDhoTXpaNDVxNTQrd2N1WEtvWnZXNzVtL2Z0Mm1rMWFzV0hQczBrZWVQUDZKSjFiUDZPemMzU2lDZUI3UnoyU1BLT3Z0S1kxYThmanFTeGN2WHZ6TmhRc1hsb2dHVlo2RGZPcFRYNTYxYnUzRzA0M3JSS0JmUXVZWmp4azdzdlA0RStjdVBlVzBvKzg4K3JnWlB4Zyt2UEQ0M0xsemUzaUpaczJhMVRGckZ2Y0Q5eTlmdnJ6dW9zdE9QdWJCKzFkYzhzdTdIejV2K2JKbmp1M28yRE5FUWpaZ01rS1UyVVlTTnRoR0NpRG4xNnhwUFhiYnBuQU04QWpSb01wemtKWExWbC9lMWRVOURZSk1tY2tFaWYwRTJFWVNCaHJxQ3IxejVzOVlmdkZscDMzNzlMTk8vTzZDQmRPZkFrd0Z6SjA3dHdkNDZMVFRqbnZvcE5PTy9jWjl2M3o0eXAvODZQNnJubmhpemV6ZW5tSWRtQU5FUDlOSDlETlZ4VGI3MmZScDM3Vm40c29WcXk4RUhpRWFWTGxQZk9JVGxOMXh4d1BEZnZDOXUvOThlMXZITEVEME1WVlB3cFFaSVVTWkFEeDIvS2dkRjE1NjJuZmUrczQvK2VUVmI3N2d0dkhqUjdZeFNDWlBIclA5MU5PUHVXL01tSkdQT0ZGaGE5dU9xWHYzZERjQW9vL29KNlJBSDRzc3NDa1U2dko3NnBvdVdqeHZIaVlhTkhuMldibnNxZGRzYnQwK1Z5SUEyR1NLTEJBWUk0Vmt6dnhwYTkrdzhOeS9QK2Y4VTc0MmUvYWtiYnc4U2hkZWV1cjlSOHljK3VRUjB5Y3UvZjd0ZDEyL1prM3JFVW5KQVF3eU9BQUNtK3hJd3JPck54eTVkY08zajRLclZoQU5tano3UFAzTWhndDNkKzRkRGFKTW9vOHhtT3BsSWNvTU5raWxlVWRQVzM3TmV5Ny8xTlZ2ZmUzM2dHNWVack5uVDlxV3YrcVVmNW8wWWVTejMveldULy9pMFNVcmowNFM1MEJJWUF3Q01KZ3FKOHAyN2RvOWR2V2FqYWNDSzRnR1RSN2cvdnVYajFxL2R0TXhTVklxU0RuNm1Xd3dpSDVXTW5mZTlNZmU5ZDdYZitpcXQ1ei9NeUFoSlRObnp1eWVPWFBtN1UxREd6dS81Tzk5K3RHSG4xeVFKRW5Pb284b0U4WmtnUk0zYjF5LzlWaWlRUlVBVnExYWU5eUdEVzJUa0dRYlk4RFlnRVYxTTJCRVNPWWRQZk9wZDd6N2RYOXgxVnZPL3ltUVVBV3VXSGp1ejY1NXp4VWZQZWJZb3g0SEpkajBFeUNxbjBIR3FMQiszWmJwUklNcUFLeGZzMm5COW0wN2hyT2Z5UkNCZzQrYU5ibjFUNjk1N2FmZSt2WUxmd2lZNnVFM1hIbk9UMTcvaG5NV1RaNHlaaDJ5ZVk0QWtRVVNZZXVXblJOdXVXWHhHS0pCRXdEV1BydHBXdmZlWWdQUEViYklpckhqUis2KzlMTFR2M3JtT2NkOEJ5aFJmWHoyQlVmLzhPSkxUdi9uWWNPYWQ0bjlUUFVUSUl6cDNMMW41SVpuVzJjUkRab0FzS1YxMi9qRTVMRUFBd1pFUDVNMlNVamkrUVNJaHZxNjRwbG5IWGZQNnk4LzQ5WWpqamlpaXlvMWMrYk03aXZlZFA2WFgzWFN2QjhLOVlDeERaaXNLUFVtelZ0YmQ4d2tHalFCWU9mT3pwRkFrQVFJQkJLQXFBN0NCZ1NTUUFJWmhHZlBtNzcyb2t0UHYzbmFuR25QVXVXT09XYkdsb3N1UHVYbTZUTW5QVzdiWUtxZndRWURjc1BtclR1bUVBMmFzSGp4NHJxdGJUdWJBWUhaenlTQXFRYTJrY1Irb2w5VFUvM2VVMCtmOTkyTExqMzFMakxpelcrLzVPRlRUbDl3YTExOTNYWVFJTExDQ1lVdHJXM2ppQVpOMkxxR1VidDNkeldCc1UwZkF3WXcxVVNJQTBJeWE4NjBwYWVkTXU5TFFDL1o0ZGU4OWxXM1RaOHg4U2RBRHhsaU9iOWpSL3RoUklNbWJOalNPcnEzcTdjZUFhS1BKQ1JSUFl4dGJHTWJHNW9hRzNlY2N1cUNMNTl6NFdrcnlaalh2dmFVN2FlZWZ2VG5HeG9LVDRKTk5STWdnVUJTS0phU0VVU0RKblRzN2g3WjA5dFRMMENJZnFaTUNrZ2lYUUlKQkNCQUFNVkpVMGIvWXQ2eFUvK0RqQ28wYmYvTnBFbmp2dzdxb0pxWlBrSUE2aTBtellDSUJrWFkwZFk1VENMUFBoTFl4cWFQVFhXdzJTK1hDNjNITGpqeUMxZGNjZTQyTXFxbHBTVTU2c2pKUHhkc3BkcVpQa0s0bURTOTlhMkxoaElOaXJCbDY3YWhObm1lWXhDQXNSUEFwTTdzWThxYWh0UnZIalZoMnEvSXVKbXpwM1kyTk5ZWHlRRGJnQ0VrRGZsOGJnelJvQWc5dmQxRGdMd05OdGlBcVNJR0RBZ1FZTWFNR1ZscWFWbllROGJObmowNW1UQnB0RUVjVEJMVlJLS1BBWnY2N1p0M2ppSWFGQ0dRYndRQ0dEQlpNSG5xQkdyQnlIRWprekZqUjVpRFNLSWFTWUJCaE1MMnRtMGppQVpGUHVSQ0E1Q2o2cGt5QlRGMjNDaHF3YVJKbzVQeDQwY0Rwa3dTdGltVGhHMnFpU1FNQlpjOGpHaFFoTTcyam5xUXFIS1NRTkRZVU0vRWllT29CVU9IMWlYRFJ3eXh4SXVTUkRXd2pXMzZtRHpTVUtKQkViWnQzVmtQRGxRNTI1VFYxZGN4NnJDaDFJSzZ1cnBTb1M3bmtBdEk0bUMycVRhMmtjaVpNSVJvVUlUZW9ndUF5QUtEQkNFazFJSlJvMFlsRXllTzliQmh6WURvSXdFQlNkaW0yaGh5QVpxSUJrV1FWQUJFQmtqQ05qVWtHVDVpbUJzYTZpa3pCeGhBVkFWSkhPQ1F5STFFZ3lJZ0Z4Q2k2Z2tRSUNCUUl4SW5DV0JzZzgxK29tb0ZFamNTRFlvOGRoNGpxcHdFdGdGVFF4Skxwby9wWTlOUDlEUFZ3NUFRc091SkJrVkE1QUdSQ2FaZlFvMUloTTN2TUgxTTlSRnlVRDNSb0FpMjhnWVJwU0VSTXBraUJidU9hRkFFNFZ3Z1Nra0pNSm5pWUVJZDBhQUlpSnhCUkdsSUxKbU1NYTRqR2hUQmtDTktTeUpqc2tWQWdXaFFCSmtjSUtJMEpIWkN4aWlnQXRHZ0NLQkFsSmFTSkpNcEFwd25HaFRCY2lCS1MySmpNc1d5eUJNTmloQlFBRVNVaGtTeXlSZ25MaEFOaW1BN0VLWEZSaVpqSk9XSUJrVUFCYUxVQ0V5MkNNZ1REWW9BRm9nb0xUSlpZM0tBaUNvdUNBV2kxQmlUT1hMdWpqdnVxQ09xdUdBNWdFV1VFcHVzVWNoMWRoWWFpQ291Z0VTVUhzdGtqWjNMNTV2cWlTb3VnRVdVR2dtVFBibGljVThEVWNVRmtJaFNZOXVBeVpaY0NLNG5xcmhnRTRqU0kwejI1RUt4VUU5VWNTRmdFYVZHeUdSUFVIQTlVY1VGZzRoU1kyT3lKMWNzdVo2bzRnSklST21SVGZhRUVGeFBWSEVCV1VTcEVUS1pvMUFxVVU5VWNRRVFVV3BzVE9ZNDVQS2hqcWppQWtpQWlGS2hRRUwyaENSeFBWSEZCYUowR1pNOUFWeEhWSEVCTEtJVXlXU01VQURWRVZWY0VJZ29OUlltWTR3RHVJNm80b0l0RWFWR3RrRW1Xd1NxSTZxNEFJZ29UU1o3QW5JZFVjVUZvbFJaTmxsakFsQkhWSEVCTEtMMFdDWnJKTWtVaUNvdUVLVkt4bVNPSmFsQVZIRUJFRkZxRENaekhCSzdqcWppQW9nb1BRb2taSTZFVkNDcXVBQ0lLRFUySm5zVVVKNm80Z0pZUktrUk1zSmtpeEluZFVRVkZ4QlJtbVNUUFpJcEVGVmNJRXFWamNGa2l5V1JKNnE0QUlnb1RTWWhZd0lROGtRVkY4Z1VJUVRrcUJXQ2hDcG5td09FWkJHU0FsSEY1WTFFVlJObHR1bG53TlFNWVlTcFdxS2ZBUUhDUmtDZXFPTHlnZW9uMGNjV1J0UVMyNmFxaVlOSkFNSlducWppOGdaUnpXVEtURDhKUU5RT21hcG1RUFF6KzVta1FGUnhnV3Buc0lVSTlETlFvbllvb1pySlFFSWZnVEZneWVTSktpNVE5Y1Ira29DQUZLZ1ZBbFB0QkNCQWxDbEFDTGs4VWNYbHdTSUQ3QVFwa0pRU3RtN1pTYzJRRFRKVlRmUVRaYnM3OStyQkJ4NDcxdmcyb3hYQlhtL1JscFNTSFVHaFBSKzB1OWpycm55enV6bzc2M3NLaFdJdmJDMU5uejY5dUdyVnFtVDU4dVgreENjKzRUS2k1OGtEb3FvWlNkajAyYnUzbXp2ditQVXhLMWFzZmlvSXNFZ3dhY21GSEJkZmV0cnRiN2pxM0E5eENHeE1OYk5BUWdMYklOaTVvNE1mLytpKzRmZmVzL1FLNEJMc1hxQ0lLR0lTUkFrcnNXeWhCTnRHQnBCc2dETlBlaGRubmZ4dUttSG8wQ2F1ZWMvcjduekRsZWQrRE5oSmh1VkJWRHZibE5tbXA2ZVhKNWF2YW54aSthcVo5QkZnMGxJb0ZEaHkxcFF6T1VTQ2hLcG1NSmd5ZzZHbnA1ZE5yZHUwcVhWYkhwUUhrNllSSTRkNTE4N09vNEVpR1pjblU4enZNbWxTRUxsY2prTmxNRlhQL0g0bWJibGNLSWFjbmdZNnliaUFFVkZxYkp0b29Mb3hhNmtCZ1NoVk9Ta0JURFFBTG1KdHB3WUVvbFJaR0V3MEVDcVNvNE1hRU1BaVNvMXRFdzFVQ1hzM05TQVFwVXBTUWpSUVJjRWVha0FnU3BWdEF5WWFpQVJDRnpVZ0FDSktqekhSZ05pVUlPbWlCZ1FRVVlxa2hHaEFKRW9sMFUwTkNFVHBzaTFrb2dGd2tpVDBVQU9DUVVTcENVR0ppUWJFU3ZKSjZLRUdCS0pVR1p0b1lFVGlnbnFvQVlFb1hjWkVBeUtjUUxHWEdoQUNGbEdLbENDYjZKQVpKWVhlVXBFYUVJaFNaV3dTb29HdzNWc29GYWtCZ1NoVlFnblJ3RWhKZlZkVGtSb1FMRVNVR21Nam1laVFDZHZEUW9rYUVJaFNKWlFRRFlpUjYzWjFKdFNBUUpRcUd4TU5sQmxEaVJvUWlGSWxrUUFtR2dDN2VWTnpRZzBJUktteU1kR0FkWTd2TkRVZ2dFU1VHa2tKMkVTSFR2S09IVHRNRFFoRXFiSnRvZ0ZyYlQzSzFJQkFsQ29GSlVRRGs4RGN1VnRORFFpQWlGSmpiQ0VUSFRyaDVjc1htaG9RaUZLbXhFUlJ2MENVc3NTQWlTSWdFS1VyVVVKVUFZdW9CUUVzb3RRSUVtUVREVWhMUzR1cEFZRW9WWklUb21pZlFKUXVLU0VoaXZvRW9sVFpOcEtKSWlBQUlrcU5VVUlVN1JOQVJPa3hHREJSQkFTaVZJVkFDVXdVbFFXaVZDbFJZakRSQUJqQTFJQ0FFVkZxRWprUk10RWhFNWdhRVloU0paUVFSZnNFb2xSSlNnQVRSVUNlREpDRVRUOEJtRDZtQ2hnd2h5cEpuSUNwYnVMRm1XcVFVRHVDc2FoeXR1a24raGd3VlVLQU9GUlNraUJNMVJJZ0pJRUFVV1VFaUZvUnlBVFJ6MkNRQWhDQUFJajBtVU9XS01FeVZjM1lCdE5IRXRYREJGRXpBcGtnSUNBQkFnTUlFSUJKVTZsWW90aGI1RkFsT0NFakpNQmdHd1FTVlVBVWl3bTFJaC9JQXJOZkxwZGo5T2dSakRwc0dQME1pTFRrY21Mc3VGRWNLa21Kc0tsNkJvUUVoYm9DaGFGSnc0d3hFNGQwSjJwS3lEWFdCVGNVZytwemhFWlRXb0IxcXNSa1F3R3JoRnd5bEdSS2lFUW1zWlNBRFNCajlra0FnZm12Q0FNMEQyLzZFVFVpYnhCVlRVakNUakRRMUZqUGF5ODZaZnY1RjU1MEx3SlJKdElTQWt5Wk52RkhIQ0lsU1dJd1Zjc2d3R0FETXFNT0c4cnJybnhmcWFYbDdPMTMzUEgwN2pwdG02V2cwU2lYZDZDWDN0S1NYRTczRkpYcmxwTHVYSzdVVXlvTjZZVTlSVHRYek8vb0tOVlRYOXJadkRNWk8zWnMwdEhSNGExYnQ1cDlGaTVjNkVXTEZuR3dscFlXODd0TWpjbVRDUWFCRVBsQ2dhTm1UWG5xM0F0ZWZSbTFJRWNKWktxYVFBQUdRMk5qUFpkZU9sUUFGMTAwc3h0bUxxWENXbHBhZUNVS1ZEc1pFRGpRenhoVE01d3ZVZTBzUVBRTDJEbFdyZXJKRTFWY29Ob1p3RWhneWhJZ29WWklTUUkyVlV3Q01CakFZTlBWMVJHSUtpNkFxSGEyQVlPTlRVMHBKVW1DTUZYTllOUFBnR2xvcUJOUnhRVkFSS25KNWZJbFdTWmpDcnZKRTFWY0lFcFZVa3FTaE93cGpNbUxxT0lDVWNwVUVqWVpzMmRQUjU2bzRnSlJxcHlqQkRJWms4OFBGMUhGQmJDSVVwTkhKYkRKbUdLeEp4QlZYQ0JLbVVxQXlad2tSMVJ4Z1NoZHBtVExaRXhkS1IrSUtpNFFwYXBVU2hMSkptTktTVEVRVlZ3QVJKU2FmRjRsd0dTT2MwUVZGNGpTVmdLWmpDa2x4VUJVY1FFUnBja3FnVTNXMU5mbGlDb3VFS1dxaDk0U1VrTEdoQ0FSVlZ3Z1NsVXVWMWZFTmhtVEpLVkFWSEVCSktJVTlaUUFrem5PRVZWY0FFU1VJcFZBSm1OQ2tJZ3FMb0JGbEJwYkpYQkN4aVJKTGhCVlhDQktsUjFLU0Naem5DT3F1RUNVcXZyZXBFaGlrekZKa2dTaWlndEVxZXF0VDRxU0VqTEhPYUtLQzBTcHNrUEoyR1JNQ0JKUnhRV0RpRkl6ZkhpcENESVpJMGxFRlJlSVVyVjM3L1FpZGtMbU9FZFVjU0Vnb2pROVhyS1VrREh1RFlHbzRnSlJxaFl1WEZnU05oa2pTVVFWRjRpcWdFem1PRWRVY2NGR1JPbXlFekltQkltbzRnSlIra1JDeGhqbmlDb3VFRlVCSllESkVOdUJxT0lDVWZwa2t6R1NSRlJ4Z1NoOVZvbk1jWTZvNGdKWVJHa3pHU05KUkJVWGlGSm5PU0ZqU2lYbmlDb3VFS1ZPSmlGakpJbW80Z0pSRlZBQ01oa2lJYUtLQzBUcEV5V3lKMGRVY1lFb2ZYWkN4a2dTVWNVRlFFUnBTOGlha25ORUZSZUlxb0JLZ01tUVJJbUlLaTRRVllPRXpIR09xT0lDVWZwRUNUQVpFaHdDVWNVRkVGRzZiQkl3V1NJaG9vb0xnSWhTSlZFaVkwcVFJNnE0UUpRK1V4S1lEQWtvRUZWY0lFcWRSSW1NU1VqeVJCVVhpRkpuVXdLWkxCSE5SQlVYaUZKbkpTWEFaSWdjaGhCVlhDQktYYkNLWkkzY1JGUnhBUkJScWl4S3lDWkRoSnFJS2k0UXBjOHFBaVpEYkRjUlZWd2dTcDFNQ1dReXhZMUVGUmVJVXVmZ29za1lxWjZvNGdKUitxd2kyR1NJVVFOUnhRV2kxTmxKRVRBWkVuQWRVY1VGc0lqU0ZVSXZLQ0ZEYk9xSktpNFFwYzh1eWpZdklJbjBDUkJJSUpDRUJBVHlSQldYSjZvQzdqVVlRQkxWeGRnZ2dSSDloQkJSNVFXaTlEbjBBZ243MkthNkdEQmxOclMzNzZadDZ3Nml5Z3RFcVRQdUJTd0oyNVRacHByWUFndEp0Ty9xb0czclRxTEtDNGdvWlVJOW9JU0RTS0xhU0FDbWxDVHMzdDFGVkhrQkVGRzZBajNneERabGtxaEd0Z0ZqbTYxYnR4TlZYcDRvZFNyUkl5bXhUWmx0cW8rUmhBRnN0bXplU1ZSNUFVU1Vya1JKTnppaHlobkFBb3YxNnpZM2Z1MXJQeGxMVkZHQktIVWpSd3pwQWhKZVFLSktDQVJDZ0FDemRmTzJxU3NmZitxdFJCVVZpRkkzWnN5b0xsQ0o1ekcycVJZaTBFY2dRVyt4Tkd6Wm8wKzkrZTY3SDVwUFZER0JLSFVOaFlZOW9DSjlCQklTU0NKMUFnbkFHQ1BNUG5waXhicDVEOXozMkx1QkhGRkZCSU9JMHBVdjdnYUtITVNBRFNDcWdURmd5b3dvNjJqdnJML3ZsMHN2KzlXdkhqNlBxQ0tDaU5JMjdyQ1I3VUhxNVFVazBtZGg4eHdiaE1BQTFoUExWMDMrenpzZmZOL2F0YnRHRWcxWUlFcmQ1TmtOTzVEM2dnRHhmQ1pkQmd3V1dDQmpEQWdRSFoxNzh6Lys0WDFuLy9pSFAzODcwWUFGb3RSZGYvMzEzY05ITk84QVRKa05CdHRVSlp0K0FzT3p6N2FPK0kvYmZ2Nis3OS8raS9PSkJpUVFWWVdoUTRkc0VpcUNRUUFDUk5XeEFBRUdHVEFZclZ6eDdKRmYvOHFQV3I3NzNidE9JanBrZ2FncWpCbzlZbzNsSGpBZ3FvODV3SURCcHAvbzd1N05QZlRBOHBQKytYUGYvb2QvK0x0dlhnN2tpRjZ5UEZGVm1IejQrS1dQUHJ5eXcvWVF6RDZtdXBnWEpRRFQzZE9UZi96eDFjZnQzTG43Qyt2V2JiM3Fnb3RQL3NhQzQ2Zi9ZdlRvMFIxRWY1UThXRVNwR3oxcCtJUDVmTmphMjVPTUI5TlA5RFBWVEJqem5OeUdEWnZILzcvYjczN0RzcVZQbjd2ZytDTTNIYk5nNXBvNTg2YXZtbkxFdUxYTnpVMGI2MExkRnZKc0E5cUIzVUFYMEFNVWdSSmdYcUh5UkZXaFVMaDJRMVBUejFidjZ0azlEeHpJRkNIMk00QTZPem9Mano2eWNzektsV3RHLy9LdVIrWk1uanF1ZVBpVU1iMFRKb3p1Yld4b0xDSVhrVW95SllNbEVzRG1wVEtORFEyODZxUjV0ODgvWnNhSHlMZzhVVlZvYVNHNTUyZmpIdDYxYTlWck1NMzBNZGtoeW9RQVl3eUl2WHQ2dEhyVnh2eWExUnZ6aFVLK29hbXBubndoandRUUVHRE1vVFBEUnpUVDBGaC81dnhqWnBCMWVhS3FNV1g2NFQ5Ly9MRlY3d0NheVJBYndJQ1FCQmhNUHdFWUVEMDlSWHA2ZXBIQU5pQWtCc1NHVWltaGEyOFhsYmJvN3E4MDNGTjg5dVIxdTFvdjN0YmRPV2QzcVd0TTR0SVE0UUlPd2NMSVJVeVByTjNHMjNNaHQybEUzWkNueGpjTS8vV000Yk1mdWUzc2F6dDVDZkpFVldQSzlKR1AxdGZubit6dUxrNEJCekpDQWdQWWxObjBrd0d6bnlSc3NBMElTZGdNa0pGQVFWVEtsWXNYNTdZMEw3bGdaZnZHLzc2enUvTUV3MGlaT2tzQkNWdVM2R2RBc3NHeW5DUXVidXZxN04zVzFkbjVkTWVtRGZOdmYrejdKd3lkK3BXdm52Zmh0ZndSOGtSVm82WGwyczRmLzc5Zi8zTHRzMXRPQVlZYXdBQ21lZ2tER0JDWUJBUllZQUFCeHZ3dTI1UkpWSTIzLytmTmt4NzBzaHMyYmQxeE5kSUVUQjZCNldlTFlJTUFEQWlNd0xJQWt3UHFCYzA5U2UrNHA5dGJaNi9kM1hiK2I3OS93ODFIZFoveHZkc1dMaXp4QndSQVJGVmp4cEZIZkIrOG51ZVk2bVl3Z01HbWp6bUlPY0FjWU1DQXNZMXRiR01iMjlqR05yYXhqVzFzWXh2YjJNWTJ0Z0ZSQ1dmZStlRlhmMy9UQS8vVXVuZm4rNDBPdDhsYklFQUNNTUlnOWhGbEFvVG9JNE1BQVVoQ1EzcVQzbE9lMkxudWN3L3c0LzkxNWQxZmFPWVBDRVJWNWNoNXVSVkRtaHNmd083RkFLTDZtZWVZZlF5WUF3d1lNSlZuSURBUUM3NTMzWjg4dE9YcGY5eFQ3TGxRVXBOQXZJQUFjWUFBY1lBUVFvaURDRXpJQ1E3ZnNuZjdoMzYyOFZjdFY5NjVhQlMvUnlDcUtpMHRMY1hwTTZaK0cya1QwY3Rpd2ZldnYyemxybzEvWFNJNUxrQkJHREJnQnNyMHN5WFFpRDNGcnZmK2ZOdnlqNzNsbmsrUDVFVUVvcW96WSs2b2UwTGdJWEFKVERSNHpydnpvMmM4dVd2OXh5M1B3Y29aWWNDaVFvd3hrakFJTVhSdmI4ODdmN1graWYrNTZPNnZOUEFDQVVSVVhmN3hIMXM2Snh3Kzd1dVNOaE1ObXZmY2ZjdmhTOXBXZjlEbTJPQ1FDL1F6QXROSG1JRVFJaGpBOUxGa05LeXR1LzA5MzlqMjYzZndBb0dvS2gxOXd2eWZoaER1QTRwRWcrTG5XNWUrZlcrcCsyd2M4bUJNQXBneUVSQVZZREFDaEFBREZrckUySFY3dGw1M3dSMGZQWXVEQktLcTlLVXZmYWhqL01ReC93cHNKS3E0eTMvMnlhTTM3ZDMyUnRCUVpCTDJTOENBQVFTSUFSRWdNQUtETUthUGJHWTl1blB0dFI5WnNuZzQrd1JBUkZYcGpQT091eXNFM1FGMEUxWFVJOXRXWDVIQVRMQkVtWUFBRm1DTU1hWXlFaUNoajBFMlFnZ0s3VDE3enZyTmxrZGZ4ejZCcUdwOTlyTWYyRHRoL1BndlNub0NZU1FrSVFXUUFCTzlkTmZkL1lYbXJkMjd6c0lld2o2aW55UVFJQkNpRWdRSWcwQVNFb0FCZ3hqOXhNNTFWOXk2NU5ZQ1FDQ3FhZzgrL3RWSDYrcnEvbFdFbldDTXNRRURpT2lsKzAzN1V3c00wNFFrK2drUS9RU0lTaElnRGhBSHliVVg5OHg1dEZpYUF4Q0lxcDJQV2pEN204RFBaSG9wVTBJL0ViMTBhM2EzbldRekNrVGFCSlNjakYzVnZ1a01nRUJVOWU2ODgyKzNUSnc0K3UrdHNCSmsraGdFaU9nbDZpcnVuWWxvUUZRRlE5T1d2YnRtQXdTaVRMaDA0WkgzTnpUVTM0TFppZ1VJYkREUlMxUnlNZzZjTjZaSzVEZDM3UndMRUlneW9hV2xKWmw5N05SdmhhQnZTdG9qaWVqUUdBOFREZ0FtWlFadzJGM2NPeHdnWUlzb0UzNzBvOCszVDUwMi9oYk16N0I3SlJFZEFxa2VVUlVzK2lpaEFCQ0lNdVhlaDc3eXpJU0pJLzhhOGJDaEJDSjZpZXk4RXdRR1RKcEVQMHNHQ0VTWjg5RGozM3hneUxEbVR3SlBBUWt2U29DSVhreElrQUFCSW4zQm9CNkFRSlJKeDc3NlRUOXViS3ovUy9DemdFR0FrQVNJUGlKNlVlb0JEQ0RTWlFDUjJONEZFSWd5NmJiYkZwWk9PTzJFN3pZMDFmMFZhRDFnRGlhQUJERFJDeVZkZ0trU3NvckQ2cHEyQUFTaXpMcnR0cGFlRTA4NzZ0OGJHaHMrQmF3RDJ4YVNFR1VDUlBSOE9ZVTJjRUtWTU80YVZUZGtGVUFneXJUYmJ2dnMza3ZmZU41WG00YzJmZ0pwTlNJeHBrd0VRRVRQMTVTclh5ZlRZOENrUzRDYzdCeFJHUElnUUNES3ZNOS8vdnJ1dDd6ckxkK1lNSDdNUjBYeU9MZ0VZQnN3MGZNZDNqeDZtVkNIcUFvT0NodG1qamhxR1VBQVJKUjVMUzBMZXk2NzZzakZFOGVQdmhGMEx3NDlSQzlxMW9pcDl5SnRsTEJJWGMrd1F0TnZ2M1RhT3pzQUFsSE5hR2xwU1I1Yy91OC9uYi9ncUJ2SnNSaG9CMHowUE44NjgzK3ViOG8zUEdwVEpHV0d0amtqSi8rUWZRSlJ6Zm5KWGJjOGRNNVp4M3hrU0hQajN3RnJRUWt2SUFrSkpGNXhESjQvY3ZKaW1VMUdnREJnakRDaVRCaGhLc0VZWThBWUExaGdKY01LVGN0ZVBlYUllOWtuRU5Xa3IzLzNNK3ZmK3U2TGI1b3laZHlOd25jaDlyS1BKTXFNQUFFQ0JJam5FU0JxMGpsalQvL0Y2SWJoZDRON3daUVpNUDJNd0VhWUFSSDlER0kvWXhuRXRua2pwM3pyMHllOGR4ZjdCS0thMWRMeTNqMi8vdTNYdm52S0djZThmK2pRcHI4WGVocFJOR0FMTEF4SVBFY1NFQUNCQVZPVFdrNjRkTS9wWTJiL2M1MXlLM0JpWTBEWUlqSGdCQUZZRElnQkJBSURjZ0FFY25GTTQvRDdMcHR5M1AvSFFRSlJ6ZnZPOTI5NjRzM3Z2SHpSckRsVDMxOVh5TjhtM0FwT3dJQXBrMFNaRFdENkNSQzFhdlpydW40OWY5UzB2MGRoRXdRTFFNWUN5eGhBRElnQkRDQnNRQkRBRGFGKzlmbVRqdnZDQitZdTNNNUJBdEVyUWt2TE83cis4NzViNzN6endrdHVtSDdrNFRjV0NybmJKVm9obEVCQUFrcEFCZ3dDUkUxcm9TVzVmT2JwaTJjT1Bmem1BRnNGRmtJWVVXYU1HUmhqR1V3Znl5NG8zM2JtdUxtM1hIdnFxWGZ4QWdFa29sZU12LzZINjdiOTZvRXZmM1BoMjg3OWJ6Tm5UdnBBdnBDN1RYZ1YwQU1ZQ3dnSUVHV21sbjFvMW1VZDd6MzZvaThlT1hUQ1o0Q05HTXRnQUFHSWdSQUNoQVFTTGlpMzljeUo4MisrNFlSTC91MEVUdWpsQmZKRXIwZzMzWFJqRy9EdGozemtNejllY3QrYWs5ZXUyWFJCWitmdVV5MGZDUm9CSVFjR1RLMjdmdVpGN2R0N09tLzlqNVcvMlBaVSs4WWJUTzdvZ0F0Z0Jzd0NqRVdwSVZmMzFKbmo1OTF5dy9FWGYrTzhrU2ZzNGtYa2lWN1JQdjNwRCs4QzdseTBhTkZQVjYxZzVzcVZ6NXk5dVhYN0NUMDl2VWNicGdsR0d1b0FVY05hNWk3c1pPN0NyOTM3MDc5NCtvSE5UNzYzSittOUVCZ05EaUFPbVVnRTJ5YzJqdnJGeFllZitDOW5Eai96cnZOR3p1M2g5OGozRmt0a1I2QlVTaWdXUzBTVjFkTFNrZ0JQQWs4dVdyUW9ySDJTSTU1OGVzM0ptemR1WDlEWjJUVURtQXFNQTRZTE54cnlJTkhIU0tMTU5pOGtpY0ZqRUVEQ1FMVkF3dmwvZWU4SDc3NTE1VTkyUG5iWDZ0MnRWeGRMeFJPQkVVWkJBQVpqSko1akRBSU1JQVRHS3FLa2RWaGQwNUxqUjAzNzRSV1RqL3ZSZStlOHZwWC9RdjZNTXhaOHVWZ3NUYWZhaFVCWlUxTTlreWFQL3hIUm9HbHBhVW1BVmNBcTROOXZ1T0dXK2kzclc2ZHVYTnM2ZCt1T2p1bGRlN3NPNys3cUhRZU14aHdtTk56UUxOd2dxUTZUTjg0QkFaQnRCbzJFRTNCQ3hkeDA5bnZiZ0srOC81RXYzWFhmaHFVWHJkcTE2ZHp1VXUrOEJNWUxtaVRsalFPQUtGT0NYUVR0UldyTEs3OTZZdU9veDJZUG0zVDMyWk5tM2ZPQnVRdTM4MGVTYmFMb1VOeHd3eTNEMmphMlR0elowVEZSeGZ5NDNYdjJqdDdlMWpaeXo5NnVZVW5DVUtFaEVKb2ttZ3hOUUNOUUQ5UURkWUs4b1NESUdYS0NuSEVPRklBZ0NJQU1BZ1FXQ0VBY1pOU29vZHh3NDlVUC9PazdMam1aUWZBM0s3OC9kT1cyZGZQWGQ3WWR0Nk43MTVRdGUzY2UxbDdjMjRUSkJhbG8yRHVtWWVqMncrcUhyeC9kTU9LeGVaTU9YL3JYczkrMmpVTWcyMFRSSU5MaXhZc2Jpc1ZSdyt4a1dKSWtRL013eERBazJFMGxoY1pnR2dodWNFSURRWFV5OVRiMVVsS1BWT2VFT3VRNlNRWHNPcVFDcGc2b005UTNOQlRxNWg4OTR3ZEh6cHI2U1RMdS93ZlorUy91OG5RdVlnQUFBQUJKUlU1RXJrSmdnZz09JwokYml0bWFwaWNvbiA9IE5ldy1PYmplY3QgU3lzdGVtLldpbmRvd3MuTWVkaWEuSW1hZ2luZy5CaXRtYXBJbWFnZQokYml0bWFwaWNvbi5CZWdpbkluaXQoKQokYml0bWFwaWNvbi5TdHJlYW1Tb3VyY2UgPSBbU3lzdGVtLklPLk1lbW9yeVN0cmVhbV1bU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRiYXNlNjRpY29uKQokYml0bWFwaWNvbi5FbmRJbml0KCkKJGJpdG1hcGljb24uRnJlZXplKCkKCgokYmFzZTY0bG9nbyA9ICdpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBU3dBQUFDaUNBWUFBQUQ3c1BCcEFBQWdBRWxFUVZSNG5PM2RmM0FrWjNuZzhlL3o5bWcwcTVWbFNTdldJMlZycytmNDloekhNU096WGh0NWJTK09Rd2doTGhjUTdwSVE0QWhjOEJIT0VGZktSN2xjRk9XaU9NZHhIRUw0blI4bVp3SkpwVXlLT0E0eERpeUwyZGhtc2NhYmpmRnhlNGJ6YlNSWjFvNWtzZFpxUjkzdmMzOTB6MHpQYURRejBvN1dCcDdQbGxhYUg5Mzlkay8zMDI4Lzc5dnZnREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGp6RXVadk5nRk1NWkFzVmk4R0poUTFRVVJlYmhRS0V5OTJHVjZLVHByQVNzL2Nqa2E5U0RpblJDQlB4Y0lJZmdCK0Q0UEVTb3dVM3I0YkJYSm1CZFZzVmhFVmJQQTIwWGtQY0FZVUFhZVZOV2JnY2ZIeDhkZjFESysxR1EyZXdHanc5ZUMraEU4TzFDNUJQeC9nR0FZMkFteWlPK2RRNE1GY044UjVLblJvVmN0SU5FQ3FndlQ4OS93bTEyK0h6ZjU0WWtNdUIxQ2tBTzhxaUx4ZWNzaDRSenVkR2w2N3JCdDk3TWpJeUp2Qmo2c3FvTWkxZnJEZGhINUsrQlZ3UEVYclhSTlBQSEVFMDVWOHlLU1UxVUFSQVJWOWNCQ29WQlkyTXpsYjJyQUd0dDJ6YkI2dVFMTi9BcktkWUtNb2M2QkV2OEVvUDJBQjlTanpJSC9QaG9jQmZlMTBhR3JIcFBNODhlbW5qdGlCMUMzYUdZWWdrOUFzQnMwRklnL0NpUURmQUtOUGc0c3ZaaEYvSEVoSXNPcStpb2dIYXdBVU5VTGdGY0RmL1ppbEcwdHF0b0gzS0dxRnhJZnVDU0JLd1QrbEUwdTc2WUZyTkdobjl2aEk3bEprRGNCTzFBY0FGS0pQWnI4anBLL3hRSGJ3VzBIOWdKdlJIditFdTE3RDhtR01XZE9jQmswR0VPRDh4R3Rld1YwU1AzS2kxVzBIenVxbWdQeXpWNUxBdGhQbnRVQ2RVQlZuWWhjQ094cGVHa0oyTDdaeTNlYk1kUDgwTldEcXZvUjFMMUxsWjJLT29RMkdUTnRlS2g5SUNHYUNUZWpqRCsrdkFkZmpyZTNwMWJiOVNqZWkyanJ5VTNYcU9vQzhHU0x0M3p6YkpXbFV5TGlpZk5zbFpwVlJmWDV6ZFQxZ0hYZThIZ09EVDZCWm04UTBYNkVTbzZrUWZxNTFjVlFjV1YxcC81NTZvUWw0YnRMNnY1ZUZaN1VBdFpadEFoOEhqaEVmRWxWc2FTcTl5VFB2K1NrYzFmcHgyZEQxeThKUmZ0ZWorYXVGd2tkeEFsZFRYNmo4VE9JSW5GRURnR25hQ2F1aEdsOGNSaHZoekx1aFNQZExwK3AzN21rNFcrMW5pNW5UZElDK01qazVPVE53THRGNUVKVlhRWU9pc2hIQzRYQ3lSZTNoTzJwYWlYcFRtTWViak4wTldEbHQxMCtMRkhmYnlCUnJocWtBSkpnQlZKRy9GR1I2Q2k0Wi9EdWVSVi9qb2pmcm1SMnFmcmRJbTZucXNzZ1duS1NlYnFiNVROUUNWRktyWDZseWZXNndDbVJ5UEtGWjluNCtQZ2p4V0x4U1dBWGNTN29lS0ZRV0g1eFM3VzJkR0NxL0owRXJVMi9KT3h1RFV0NzlpcHlJYWhMWHdiR2FSRTVpVnU1UjRqK0ZDa2ZCM2RTZFRBa1dIUVE5UWs5ZzRpTW9jR2w0SDRkS2M5TlBmZnRqbHFyUm9mMjkwSDVJc2p1QWYxSkpIUVFlRFJ5cXBsL0V5Z1NyQlNuVHh4YVhPOHE1VWQrQnJSM1RNaGNVV3N4cURZU2xGWDEwRXpwc1ZLemFjOGJ1Z3dSTGhGeEZ4QW5pZUpwUlp5cW5JVG93RXpwVzAwLzVOSHR1MEg3eHZEWnZhaWdBcUsxYVJYLzJMT2x4eFlBeHJidDYvZGU5b0NiRUluS0txZnZtVG54cmJsVzY1WHNaa250dDdKTytndEt6OWJSNGF1Y29xRE9pWVRQSS9wNzB5ZitlVU81eE5IaHE4YlFZQy9JUlNvcjU2TGlSYnhEZTErQThDbVZsY1A0M21kbUZnNnNlLzZqSTRVTUd1eUQ3QWo0TU40OFFOeEY0L3ZLNmFNemMwZkxvOFA3K2xUZHBVS3dWMlhsdkxobE5QQ0tmRThrUERoZGV2aXBqYXhiTjB4T1RvNkl5TzdLWXhIcFY5VjhzVmhjQW80VUNvVU41M0FuSnllSFJlUVM0Q0tncjFJTEVwR25WUFVJY1dEYzhBbXFvVmFWRVpGWEZZdkZMUFU1bnU4REQzV3J1MFBYQXRiWXl3cjRsVndCWkh2bEFGQ3ExN29lL1AzSXlpMzBMQzVOUDd2cVNxOE1MT1MzWGY1OThiMlBRWEN2QkQ4WWFMMjh2ZmlWWEI0eU42RHlWbVhyYmlBbjZqTEVpVFBpV2tNVWdwUTF5anc5T25UTlg2SHlhY21VRjZmbURuWDJRZmtoaDg5ZW9mUjh0clplZ0FxQ0xvbjROd0JORTIzaWY4SWhwOTZwK0xkSUhPRFNyejZEWnE0Q21nWTdqYzVCZlArbGFPNnpnS3VGRmdYa3VCRDhSbjVvMzNlRm51dlV1NXRRZHdtYXlTbjZKSUYrQ1dnYXNPS2FWZnBSN1ZuVjdJUm83Z3FxUzNLZzBiTGlmNytqYlpVWWU5bmVySVo5RnlyY3FEN3pHb0VSY0JueHZhNjZDcWlISUVSeml4QWV5Zy90LzVnTFZoNmJtdnRtNTEwcS9FQVd6WHhZZmUvRklqNmRmQURDVHhLOGNPZm8wRFZYNEh0dUZ0d2xRRTU4MW1rMXI2b2htbDBhSGJ6dUM4anl4M0FyeDZaUFBIcFdHM2xFNURwVnZidlNyeWtKS0FDendPWEF1ZzcweWNuSlhOS0s5MWJnZGFxNm5UaVl1RlRPcVV5Y1AzdHNjbkx5cjRBSFJXU3gwK0RWMFArcThuUU91QjU0YmNNbDRrSGd5SHJYWXkzZHEySDUzZ0ZCZjByUnZzcEJYZGszRmJlRU8zSFhUT2x3eTUxeDVzU2pFT2UxRm1peGd2bVJQVmxkR1NpQXZ3UE43QWNxZVRFUW42bzFnQ0paOEgxQzVsSzA1MUpZK1dXTnR0eHgzdkNlQTgrV0RyZk5FUWpxNDRNcjZrdHFWZkY2Q1lBL2lZUnJmc2dpSnoxeEZUOEhaQ3VIVXhJZU1pcSt4YlNWMXJ1b0wrNGpsZXdrOGRKUElxZjcwWjdiMGN4dksrSkVGSlVRUVRQZzJ1NTQ5WUdyVXQveW1UaTFtRHhXUlFsbjE5TnltQi84K2J4R0syOVc3YmtWbGNIS1p3SWVwTEpmMUFLTG9QMFF2QkVOcnRkSS9qQS91UDlqMGxONlp2cTVqdE9YWmNIM1YzcStKSmU1SG5SWWZPNWQ2ck8zQ3BMVlNrQ3JCU3NFeVFKOUVQdzJ1bVUvUHZQQjBlR3JINWd1SFR4ci9kQ1NBenZYMEhFVVlIYTlPYUZpc2JoRFZkOEd2SnVrdTBSRFVLbjhuUk9SQVdBSDhIb1JlUUQ0U0xGWVBOUnAzcXpoVXJEeU9KUDhwSi8zcXRxMWswRFhXZ2sxT3FjZjNHRGpXVnR3UURRSHdkRnVMR2Y3MEhoT29uTmZqd1ovam1iMml5aUlUd1Vva3FBZ3FiK0VlSWVPZ0dBZnZ1ZWo0cmUrS1QrMHA2L3RlcTNSQWxKZG5xN2RSNndTY21vQlFWS1A4SEY1T2lYVjZSVWRCdmxkdFBkZENFN0UxNTBnV3M4bC9iczJ6MnJOc1NIcHZwNURKajkwNVM2UTI5VDNma0NRUVJHZjVBTWsyUlphRGRmcFdsNVM1cXo2N0g5RGUrN1VjT2ppL01nbGJaZW5xUzJjbmxQOHYzczltcjBWSWFzU1ZmTjFVamQ5NVg4UHlNV3F2WGVveXB2T0c1N1lsTzQrelNUZEJOSWRNQ3ZXZGFrMk9UbDVzYXArU0VRK1FFUGZybVk1cHdhdlZkVlBxZXAvTFJhTDI0dkZZcnN5bzZwcjFiUld2YStidXZmQnFFUGphd2hBNjNaSndjL01sQjQ5NHlUaVQ1ejNDdWQwMjM1ODVuYlFpNlRhajZqdVlnMXdDRzZORmk4Ri9DN1IzQWVFcmRlUGJydTg1VGFvQlltTmFOZjVySFU0MEliZnFWcldMalR6R2lUS1ZwNlYybStmM0NiUmNyNk42MVAvaWFVdjZEc3pPclJ2Ty9UY0RMeEYwSDZ0MXRScSswTjgrbkRVWDVSS05ad0pQaWZJRFdqdjdVVG43V2kzek1idU1rSTFLRHFRUWRDc1ZKZmdvUHJUV01OTTloM2xmTFRuZzZKY3VvNVY3NXFOdHJKTlRrN3VCbTREM3FTcWJhK2FtaTFIUkhZQnR3QUZPb2dMcVV2WGRTL3JUSFF2WUlraTFlcTJwQTZLN2hRNFA3U1BxTngvZ1FpM0lYcSs0bEdwTFN2bVFtQlJDWThwMFZGQkY5R2dyam9hNS84OWlPNUVjeC9WcUg5WHErV202eDJWV3NKR2dsZXpxZHB0bWZyYVVGMGRLajd5VkVFVlVZZXFoT0RLaXZPSWE3blQxc0tvMWoybktsN1ZsVkZYRmczS29xNE1iaEJ0dlp1TURsMlRRWE92RisxOWUzeUo1NnVYWGZHY0hZb3NLeklyRWgxUjhWTUt5eWkrMWxKSlVodlRyR2p3V25UbDV2eTJ5MXF1Ui9OdHVyb09CVklXb3VQSXltRWxPZ3F5TEJyNE9FYWx0b2w0SU5ncHV2WHUvTkRWTFhPb202RlNHMWxQcldSeWNuS1krQkx3QnVMVVErTjhQTENzcW92RStkSUZZSmxVRFM2cExYbmdQbFV0MHFaMjExaSsxT013V2RaeXNveGx3SWxJMTFKUFhXd2xyTTlPMU8wMjRoa2QrcmtCdElkMGpnUVVWZWNFSHlKNmNucmhLeTFtN3pJUTNJUUdFeW8rcm00bUx5V1hOOGVGNkMvVW5mcWNxbjlhdEtlTTgrZEQ4R3ZxZTM4VGxSM2drOFJqcFp4dUJQRjM1NGNLLzNGbXZ0aTBCaGhYYTlQQm83NnpaYnNUU0hxNjJsYmFDR240SFNmRkJWbEFvcUxnRDZ1VXY0ZEVKU1NjWFhzKzliZmpwTE5KNGxhK2hKejZlOFZsNHBZMGNVaDRVcVZkRGlMY2dXYnZRTFN2c2dTcHJxbVV3UjlHVHQybDJuZHdadjZmNXZKRCt3Y1FKaUM0RVRKWGc5WlNDUUlRWmtWejc0V2x6d09QcmIxRjZyZGtiZHRXZ3FWRDRidmlUbjBFQ2Y5bStzUS96K2FIcjNTcWJrTEl2aHVDMTRJT3BLY1dJdERnRXRYZ2JmbHRMLy9qbVJOUG5KVnVIaDFjdHEwMTNiWEFiOU5RK1VqeVI3UEFBOEJuUmVRcEt2MGVWUzhSa1Y4QnJoT1JuY243SHdUdUhCOGZiN0h2TkM5ZjhuZ1p1RWRWL3k0SlVKWHE3QnpRdGFGeXVoYXdxcnZucWpPY1I5VHRBdmRCOEM3ZDh3Y0FpVElnMzFQa2oyalJ0ZDg1TitZajkrYjB0TFdtZVo0V1ZqNkFSRitZS1IxS0gxekhSa2NtL2djYUhCRXlIMGJsUXVxbWpVQ3pWeUQ5ZTFpanBhOXgvYUR6Z0pPdVk5UXZkMzJCcTdiTmFwZStnc1E3cEpRL0pNSFNYMC9OUFRyVGFhbnFhaFgxSlhvVXVIZW1kR2hkbCs5SzhGc1FERUJVbHdoQXBheWk5K05PdjEvazlIZG5Uc1IzbXN6TUgxZ0V2cHdmdXU1eDBlajk0TjRoMEs4TndaUm82Ky9taDE3NXF6UHpyYnRVck42V21nUnpQUTZuYjU0dWZlUCt5aXN6cFc5NjRPSDh5SjZuQ2MrZGcrRHRjVU5SYmJraU9pQUV2d0R1cjRFT3QrdlpWeXdXTThEN2FIS2xKQ0xIZ0R1QnYyalNwK3VoWXJINE1IQUY4YVhrVGhHNW8xQW9mSGVqWlZIVlVFVCtkWHg4L0lHTnpxTVRtejY4VEx3N0JYbmd2ZldkU2VQWGtqUHh3NEo4bkJZQnkzdDlqWWdiME9ybFJqeHJSVTRpcC8rY1lPbHZwMDg4dG1ySG5wNDdWQjU3Mlo0SE5PemZnV1p2ajgvbWRlVWJnTjVmSE4wMjhmRDBpZFYzUXNURHI3Ull1eGExOTFZViswNkNWZTBrVUQ5RjdiSzdmS2RrU2grZmV1NkpqbHRobWgzY3FUQzZWYld4KzBWcm85dGVNYWhSOW5XU2RET3JTNm1MSGxGT2YxaDkrYnV6QzRkWFRUc3ovOURzNlBDVmQrTzNYQWp5YXBJRFR4Q1FFQ1c3RjFuZVRZdjc3V3A1dmtwWGpPbys1bFhDdTVEd3k4Mm1tNWs3UEhYZTROVjNDbklwdUltNmsyajg5L2xvMzRWc2NzQks5MlhhUUcveEM0Z0hDbWhVQWo2aHF2ZU9qNDgzUGZra1FlekE1T1RrZ29qc0xCUUtCOWRaOURwSmdqMTdKdlBvUk5keVdNM3ZGNHhmcWY5TFV6OGt6Mmk1ZlZyYlhSUDNmV3FZdS9DVXVsUDNUNTk0Yk0zbTJLbm5EcGVSOEY3d3pYck81MFFwd1BKZ2s5Zk9LR25ZS3VYZVNaWWlYZmVwejU0SmNTNW01UyttMXhHc0t2Tk1iLzNWNVZodmhtN0xKYUp1ZTl5dHBCWTBRSmFWOENISkxCUm5GeDVkdXp5WlU4K0FmaEZZckcrdlZBUUdSSU5tQjJUMWZaVnR2T3BTSFQyQ0JnOTZ3alczejdNTEI1OFJLWDlHTkc0SXFDeFhBZFJ0VisxcG0vZy9VMmNRckFBbWdFeVRuTmRSNEcvR3g4ZmJkczhZSHg4dkF2ZTNlMTh6VGJwTGJMcE5icjd0NUFPb0JxRTFjd1dqUTlmMGkvWmNGUGZuU2MvVGVRaVB1cURjNm81M0FLWkxEeS9nOUt1TnF4eTNOTXFJK3BlTnJUWHRXaDlGSngvUld1OVp6NjdabUh5UEU5VDhUNXpiVUdlOCtrQlluMzVmN3lFalByY0xOTnZZd0tJYWxBaCs4TFdadVNNdEErclU3T09JTy8xVm9BUlMvUmVYU2JPcXZUdlhXU0pVQlNVOEpNSDgxR3hwelJSWXpQbjdrWEFwdlZ3QkVCMUFnNTJqdzlkc2VxMEJObnhpL05rbTB5NERqeFFLaFdjNm5jbDZlN3MzM3Z6Y3BBeWJwbnY5c05KbnA0WlgyazFKZkFQMG1tVlJPVDJnTGhwb09HUUJ5aXJSMVBSemt4M2R3NlRxdjdNcUxxb0FraE01MmQ5OG1sci84c1kxYWZjUmJUekJ2bm8rVk9zdkRrR1hCVDNxWk8zYVE2dDVwZXRwcS9KeTZ5eXdFbzVBM0NwWmExRVZSS0lsb2JlajBUSTFlR0VXOU9UcXoxY3lJbjVvcmVscUhTSnFqMnNuUDVuRGhlMXpjVDYzQ0J4UGx6NzVLeU1FUS9pK1RVMmJiS1JsTURYdFdKTnBRK0QvZGFGb25Tei9iQ3ltVGxjL2pPWUhhSnhQQUh4OS8vZjR0ZVNXRmRka29KUGFIQVRVcDlxZDZpOHoxM0hReXZJYUpYV3NzUzBxcllUVk5XbFN0aldYaHFNYll3ODI1R1pRV0JDME5IV2l3OXVMVnMwci9haW1Mdi9VdVN5b2s5Um5HL2Q1VXZDZEJWUWg4SXJHMjFscUkzeUFPTFI5azNnNnpNWEJVZ0czSW42ZzArMFQxdDM0Vk0yUmJyUVRTK2ZXNkRIZXFjWmU1WkFjYTkwdVp6Tm5jNVNHaXE0R3JNWldyTXF6eU1wMzBlQ1dTbkJxdUt6TEFMUFE2azV2bC9UcHFQWFpTWFl1SndURG95OHJ1T25uaW0wL0pFRjJOUjZ5OGEwYUxLdmZ1bVlPYk8yV1BmV3RhcERUQy8vSTZPQjFJYlZoVm10VHJwcFhhNmxiZWhDMFZBdSs2NlYxV3lCOXU5REdCSFBndzByTnBOYi95bVdoWnp2UXZ1VXB5ZzJDOUVscXF5VDdUNGpROGxhUitpQlREVm9Pb2lHVnBTeHRCcFZUVG1lRjNQYmE3VHJWenlaVThjL1RJZ2YyRWpBSHEvSmZHYUJwUHJaYm11WGR6bFp0cTRzQnE3RVZDNm9mdlVwSnhOK1A5bENmaDFMUWdEaUd0ZXlkWFJMUlk2cnVvblJyam9qUHFycUxDTGZzQUZwZXMrZTNGYkxxOVJxMFBsQWttL3VrdUtYbU55RTN1V3hLS2dJZ0xndEJOci85cDVpWi9UOU5sbmxaVmlOR1FES2tXemRaWDdDcVRWT3RZL3AyblRsYnphWFpYRGRjSmxrK3JySzFYTHREcVpwNEgwQjdDdHVIWHZIdzdQeTNXODdEZTdkSENBYVFxQzc0Z0M0aituL1htaTc5MlRRR1lwQkxOT3diZ2RZQkQzZHFMK0hXa2ZqMm5XVEt1UFY1Q1ltbWtIRFRoMHhKVzArTlJVVCtkK1A3VlRVbklwY1ZpOFdCUXFIUWRuU1N5Y25KcklpNDlReG4weXlIMWV6eFp1aGkwcjFaaEsyMDRhaWJtditxbjFyNFJ6ODEveFUvTmY5Zzh2TVZQN1h3Z0o5YXVOOVB6Zi85bW5PZVBuRUl4WCs3Y2haUDN6TW15TVhRZTExK1pMeDE4UFhuWEl0bUxxNHZweVk5eFBXWWM3NXA4M1c4ODlhV1YxdFhCWFhEU3JSYm95M05MeWY5bHQyQ1hDeG5jR0tvejUwbHdVWEVyUnI4WVowcWRXR3BPK2hsWmQzemRWSUVGbGZ2U2pvSW1WOFNXaWZOeDBZbWh0SGdWMUNHSytXcWJtK1ZKWldsTmUrQ2xpYW5ubG9UZ3J0Q0pOaWJIMTc3MXF2ODBNU2crUDZiS3R1aGV2a25JTUlzb3NkbjVqc2I4ZmFhdi92dncrZDk3bGVIMy8zZ0gyem9zMjRZcWFGVGh5clRwbjQ3NHZIV1g1Y005YkttWXJHWUZaRmZBLzVMdS9lbVZPOXZhc3kvZGZNbTUxWUw3NHBhM3FINXEyYzhmL0gzQ3hxdWFzMkI3V2pQYnhIMVQ0eHV1NnpwK3VTSDlsK0libmtma0UrZmtaT0F1cWlFWC9tM3VUVTZKNG9ndURsZ3FWYlRrc3JDSGVyZUlORlFybkd5ODRZdkgwU0RYd2U1aExwTDVOclNXMG5mRWxUZmpsY3RXSnM1dEpwM3MyY0VSZitkYXJScVhWck9TMDdPSUtjZkVRMVcxYkVGSnB4dXVYRjBlRi9UUzVUUjRjdjdOZXA1Qy9SY3F4SmwwdE9pQVNMaDA4akpOUVBXNnR1MTYxSU4vV2p3ZnFSY2FMN3NLd2NoOXk3VjdQNUtyYjlXc3dQUVo0U3c3VGhaRTUrL1pXejdaMy8xYlVmbnYzZlhZbm5wemkvKzI2UHZLdnpsamZuZk9mRFpkcFBHU3ptejRZYUx3UEYwSGl5eFExWGZwNnJYVGs1T05nMmd4V0t4SDNnamNEdHdtNnBlMys2bTU0UnZYRjVxcEliejFsUDRqZWhxdDRaMERxdWlpMWUyUjFXaUIxWVgyU1BJSG5UTHg5RHNHMGUzN2FzZWNQbmhWMlpHaHlldVI5MUhRYThXdkt1VU5DNWNnTGp3bUtmY3RITWh3SFRwbTZoUVVtUm1kWkR3aUdiMmkyUnZHeDIrdlBxTklhTkRFN3ZFYjdsTnlieUQrSHZNMXExK1BJTlVtYXVQTjdabE5XNmttRXM5VHIzb1hnZHl3M3JtTi8xY0VVUS9WWitWcTlZTEJ5RHpEalQ3b2RIaEszZW5wOHR2ZStXWStxMjM0SHQvVjBUclJoZW90SVlxNVUvTnpQMXJpOXhpNCtlUlhoc1BCQVdKdG4xa2RIamZxMGRIOXVRQVJyZTl3dVdIcmpoZmZlOXQ0ak0zb3pwUTI2SmEyUTVMcXY1aE1xZGEzbEx5MWdmK1lPeC9QZjh2dDgySDgzY3VScWZlRm9tKy9ibG80ZmJabGRMZFh6cis5ZlVGL2pVdXMxb3BGQXBMSXZLWjlIT3BJTElIK0lpSXZMZFlMTzRzRm9zT1lISnkwazFPVHU1VjFRK3A2aDJxT3FhcXd5SnlHN0MvZzhVdTBhUXpyWWhrUmVRMXhXSnhvc1BBdHlGZHZEV24xcVRkalJwVkk4OUtXWEIzZ3A5UVpLU1NFMHAyTlNmSXhmaSt6eWg2UzM3b21xT0NoT296RjRHN0NLUmZxcmNGSlhVSkZRUzNySEx5MXRuNVI5dGM2Ni9NZ2pzRVhGRFhtaFMzSU9aRU0rOUZ6N2xoZFBDYXcrQnlhTEJYQ0VZVW42dGxXaHJHdCs5QXJWVTAvYWhpZzl0WWw1ZWdyNGp3bXZxbUVVVUpSc1NmYzNkKzhPZC9VMkFaZFZra0xJRi93L1RDMTlhczdxdnFZOGpwUHhiTnZrdnhtY3FRTXZHOC9RZysrdzdFM1RBNmRPM2pTalFqdUVFaXQxZmpyM1RMTmJaT2lqcHc1UU5LZEYrYmxVbjlINjlGN1g5SWd0WUV2dS96NnJOUDVZZXVlWkpJQnFCbkF0eDJ4V2NiYzJEeFFBL1JNYVg4cVpubkhsOXpuZDkwLzEyWmgwcmZmdU1MV2Y4Mko1bGM5Vks2cDIvdzJlVm4zL2d6QXovOWRlQ1RyY3UvcXBheUVmY0NQNmVxKzBTa2VxbVdYRjd1Qmo0STNBUjh2MWdzTGlRRCtsMEE5SXRJOVRKUVZTOFdrYnNuSnlmZkJ4d2NIeDl2bWxNdUZBcStXQ3crS3JMcXhPYUlSM3I0SEZBc0Zvdkx5Y2dSL3lJaW55NFVDbDI1WTZCckFXdjFQWVNOTzgrWmViWjBpUHkyUFljMU92Y0RrUG1nSUNQMWg3QkhrUUdRUzBWemw5Yk84b3BVQjNkTEFwdzZCRmxVV2ZvajBaNjJ0eVNvTzFXU0tQZjNxc0ZyaFdoRXBYYW94enVhenlxeVc3UjNOMEQ4dXE5dWdmU0ZSdE9Sb05vdFB6VmRiVjRicmJ0dVdVSXovNlRDV3dUR1ZoL3VEQUFUMWQ3bXlpTFN1aVkrTS8rTjVmemcxWGNyMFFWQ2NKMXFsRW1QZzRXRVdXQk1OQmdUN1luTExzbXJVc3VoeFZNNEQvcWs2c3BOWkJiYTlOUk9OeGpVWHlER2Z6dkFPMEdIaGN3RW1wMUFsZW9RVkpXS2R1MFVoQ0FsbFZPM1BEdi96WmExcTIvUEZFZWU1d2VYaDVsc0xoQ0hKTTNOQXRBN2tQbmV5dXd2MGtIQXFqaUQ3Z0ZQQTdlSnlFZUJpNVB2RFV5LzNwZjg3SURWZ1RFVjNCd3dSbnhmWWJ2K09IOUpQQlJOOVZJL21ZOERkaVUvbFc0UGc2cjZCYnAwaTFQWGU3bzMxaUM2MmRnNWMrTHdNbkxxQ3hEZXBiaVNhRFdwRDFSMlg2WHlmWHZwQTZIeVBsRkJSVW9xNForSTh4K2Rubis0YlN2UXN5Y09leWdmRUZuNUc1RGxlTG0xamdIVjM1STZBQlcwVW4zV09QZldxRjFOYTYxWHorUlVNTE53QU56eTQrRC9XcE91RWZXSi9mcEhvQjJOZ3kvWkY1NFc1MjlUL0FHUWNycWxPUDZVa2tBaUVTcng1NU51UUVubTRoVTlndk8za0NrLytlemN2N1paYXUzV25GcmRYdEY0eE5FNWxPVmFtc0tqaE1RdGtZM0xyZFpsNTlTdDNJRmtIbXkzdnIwWklYQzErbW42NDNBRXJFVGxkUTAzM082NXRSUUtCVVRrRUhBclVFd0dCRnp2YlRPZU9QRGRMaUovMjI0YytVS2g4SXlxL2hHcFBwRE5jbkJKRUF0WlYxL0oxcnJjU2xnZkpOYmIxNmdUTS9PSFNnU0xuMFJPdjErRnFlclFVTlhEWW5YeXYzYndaRkNZUlU1L1dGMTB4M1RwWU51aE5LckxYZmo2ckFTbjdnUzlUeEhmZUV0MGJibVZaYnV5RUgwSmllNUwrcEhWSDVyeEY1ZXV2VUN0YmRIbXVacU45dzJjbWY5R0NTbC9ETUlINGpIRTByZkQxRGRxZEhyb1RNOStHd2xlZUJ4WnVRa0p2MEF5VUYrekZFSHRVcjd1ZFMvd1pUajlIb0tGaDJibUh1bGdKMitzcmRhRnh2dVE4aDhxVWs2SHRQUitBdFZhSFNESElmeVFvSitjS1gyOTdjWTlwMmZyUW8vTGZNZjVNR3k4QTM1bHVjUlBiL21KMW4wNUttdFEzeVZoMVhPZGVQbkxYeDRDWHdaK1MxVy8zS3gvVkpzQTloRHdibFc5cDVPdUVJbFBBUGNRbjVTckk1QTJDMXpkN083UXhZQ1Z5U2lCMC9nQUNFRkN3WVdLaEFvajNWc096Sno0MW9LNHhYdEV3bDlTS2QrcjZCenhzbnk2dFVkVmlPODNsRkJoR1RuOUFNSHlMeVBMSDMrMmRLRGpZRlV4ZGVMUTB5clJleUQ4UFlIWmVMN2kwVXJ0ellFNlQ5eUg1OCtRMCs5RGMwN0ZaZVB0SWNtMmNTRmtNdURiRExRbm1lUmdDa2xQcTY0UGxUTzZ4ODNMODhkdzRZM2cvMHh3eTZvU2F2TGRrTW15azk5a093MWFVM09QK3BtRkEwK0tXM21mRXI1YjhVY1VLU3NTYWx5dFN1WE14SVB6aWl1REhvUHdWa1QvczJZV0RrM1BIZTZ3NzFQNjFGUlhxM2VDTGhJc2ZRUlorU0RJck1UN3BhODFDd254WTFjR2Z4Q2lkeUxocDZmbnY5YlJBZnM3bC8ybjVjdTIvY3g5dVhMNVlIbmxaQmlxNHRWenVyem9SM3EzSFRrMzJQSW5uYTBET1ZYTmlraVp1Sk5yNVdkUXRmUE9kb1ZDSVN3VUNvZUJkd0kzcXVwaFZWMFNrYkJoR0dhZjFIckt3Rk5Kc3YydHdJUGo0K01kZnc5aU10YlcrNEZiVmZVNFVGbE8rajBRajcvVnhkNElYVEk2ZEZXL3dtdEUzQVdhZktXVkNLaEtSaVNjbWk0OWZFKzNscFdXSDc3TVFjOHVmUFk2Q0M0SHYxTUlCa0V5RUM2QU82Ym9FN2pUQjBYOGt4djl1cXEwMGVFSjhMbGRTbkM5RUwwQ1pEZTRuQkl0aU1oUktIOXhldjRiWHgwZHZnem92VmJKN0VWOXRUa1lWUWRhUW9ON3B4Y09OTTNUakczL1dUVGF1bHQ5N3cxUXFlM0UvV3dFWFFDNWIzcSs4eHJpbXV1eTdVcUhEL2FxdWw4R1Z4Q0M3VlRIRVJZSDRTemlmMmw2STEvRE5iUi9RTkVKeUZ3cDZHNVVkc2JiU1pmQnp5SjZES0p2aUFRSHAwdGZhOXB4dDVYODhGVjlhT1lmeEdldlJpSnFTU2tCV2Zra21jVmIxZmN1Q01FdUNHNVFsY3RSZDc3Z25CS1ZFSjRVb24rUzRQVDlVM09QYktqS2V2WGZmV0RYTTNQSGZuT09wZGRHRXBXM2FlN1F0cDV6NzNyaXpaL3BhTkM2WXJHNEM5aVhIdG80eVFVdEFsOHFGQW9iNnJnNk9UbVpBeTRSa2F0VjlkK0xTRjVWKzRtLzNPSTd4QU1qUHRLTnI5OHFGb3RqeE4vUWN6bXdJNVVEYzhSZEwrNHVGQXBkR2NTdis4MTVMNkw4OEN0QWUvcUVyZjJveTZpYlg1enA0SnR4enRUWXRuM0RHcDJiVTA0dTRsNVltaWtkL3FIOE10TDgwQlU1NGR3QnFUWjVPV0RacTBTejA2V3ZuOW04aDEvcFJIT0RRamJuV1ZsR1RpM09sTTdzNURHYUJDeXFBUXRBaUwvSGNlWGprdm5CcmROemg2c0haSDc0c2d3Nk1DZ0VXZVhVQXJLOE5GUDYxaG10VjhYTFAvZk83ZFBNK3oxYmYzTGhnUnZ1ZXNuZHpwTjBETTBBeTJmeVhZUnRsdUdBZE0yL0VyakszVnJtajFUQU1qOWU4c05YOVlsbS9rRjk5bXBKdnQ0TkpHbWdERDlPNW9WYnArY2U2OHIzNFptWGhyUDJkVWJHZEZ1cWphNnh0ZkZGS0kwNUc4N0NFTW5HYkk1YUg2ejJYVVRNandhcllaa2ZXdWtPRTV0ME81aDVpYkdBWlg0a1ZQcGVLVjBBQUFFSVNVUkJWUHJCMWQvUmFLSHJSNDBGTFBQREsvNEMyYVJWS2hXY0JFQWNhdnYzanhyTFlaa2ZYaEo1d1QyRFNoNlI1YmgxVUJ4S0JxRVVkeFkxUDBvc1lKa2ZYbTVsV1h4d280ckxDaExHL1JsQTQxc09sa1hjcHZmQk04WVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTR3eHhoaGpqREhHR0dPTU1jWVlZNHd4eGhoampESEdHR09NTWNZWVk0d3h4aGhqakRIR0dHT01NY1lZWTh6WjlQOEIxVHBWUHp4alRzRUFBQUFBU1VWT1JLNUNZSUk9JwokYml0bWFwbG9nbyA9IE5ldy1PYmplY3QgU3lzdGVtLldpbmRvd3MuTWVkaWEuSW1hZ2luZy5CaXRtYXBJbWFnZQokYml0bWFwbG9nby5CZWdpbkluaXQoKQokYml0bWFwbG9nby5TdHJlYW1Tb3VyY2UgPSBbU3lzdGVtLklPLk1lbW9yeVN0cmVhbV1bU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRiYXNlNjRsb2dvKQokYml0bWFwbG9nby5FbmRJbml0KCkKJGJpdG1hcGxvZ28uRnJlZXplKCkgCgoKI3JlZ2lvbiBHVUkKW3htbF0keGFtbCA9IEAiCjxXaW5kb3cgV2luZG93U3RhcnR1cExvY2F0aW9uID0gJ0NlbnRlclNjcmVlbicKICAgICAgICB4bWxucz0naHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwvcHJlc2VudGF0aW9uJwogICAgeG1sbnM6eD0naHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93aW5meC8yMDA2L3hhbWwnCiAgICB4Ok5hbWU9J01haW5XaW5kb3cnICAgICAgICAKICAgICAgICBCb3JkZXJCcnVzaD0iV2hpdGUiICAKICAgICAgICBUaXRsZT0iJFdpbmRvd1RpdGxlIiBIZWlnaHQ9IjQ1MCIgV2lkdGg9IjgwMCIgQmFja2dyb3VuZD0iV2hpdGUiICBTaG93SW5UYXNrYmFyPSJUcnVlIj4gICAgICAgCgogICAgPEdyaWQ+IAoKICAgICAgICA8R3JpZC5Db2x1bW5EZWZpbml0aW9ucz4KICAgICAgICAgICAgPENvbHVtbkRlZmluaXRpb24gV2lkdGg9IjIyMSoiLz4KICAgICAgICAgICAgPENvbHVtbkRlZmluaXRpb24gV2lkdGg9IjU4NyoiLz4KICAgICAgICA8L0dyaWQuQ29sdW1uRGVmaW5pdGlvbnM+CiAgICAgICAgPEdyaWQuUm93RGVmaW5pdGlvbnM+CiAgICAgICAgICAgICA8Um93RGVmaW5pdGlvbiBIZWlnaHQ9IjYwIi8+CiAgICAgICAgICAgIDxSb3dEZWZpbml0aW9uIEhlaWdodD0iMjQwIi8+CiAgICAgICAgICAgIDxSb3dEZWZpbml0aW9uIEhlaWdodD0iNTAiLz4KICAgICAgICAgICAgPFJvd0RlZmluaXRpb24gSGVpZ2h0PSI1MCIvPgogICAgICAgIDwvR3JpZC5Sb3dEZWZpbml0aW9ucz4KCiAgICAgICAgIDxUZXh0QmxvY2sgR3JpZC5Db2x1bW49IjAiIEdyaWQuQ29sdW1uU3Bhbj0iMiIgR3JpZC5Sb3c9IjAiIHg6TmFtZT0nVGl0bGVCbG9jaycgSXNFbmFibGVkPSdGYWxzZScgCiAgICAgICAgICAgICAgICAgIE1hcmdpbj0iNDAsMTUsMTAsNSIgQmFja2dyb3VuZD0nI0ZGRkZGRicgRm9udFNpemU9IjM0cHgiIExpbmVIZWlnaHQ9IjM4cHgiICBGb250RmFtaWx5PSJBcmlhbCwgc2Fucy1zZXJpZiIgRm9yZWdyb3VuZD0nIzFhMTI0NicgVGV4dFdyYXBwaW5nPSJXcmFwIiA+CiAgICAgICAgICAgICAgICAgJFRpdGxlQmxvY2sgICAgICAgICAgICAgIAogICAgICAgIDwvVGV4dEJsb2NrPgogICAgICAgIAogICAgICAgIDxUZXh0QmxvY2sgR3JpZC5Db2x1bW49IjAiIEdyaWQuQ29sdW1uU3Bhbj0iMiIgR3JpZC5Sb3c9IjEiIHg6TmFtZT0nTWVzc2FnZUJsb2NrJyBJc0VuYWJsZWQ9J0ZhbHNlJyAKICAgICAgICAgICAgICAgICAgTWFyZ2luPSI0MCwxMCwxMCwxMCIgQmFja2dyb3VuZD0nI0ZGRkZGRicgRm9udFNpemU9IjE4cHgiIExpbmVIZWlnaHQ9IjI0cHgiIEZvbnRGYW1pbHk9IkFyaWFsLCBzYW5zLXNlcmlmIiBGb3JlZ3JvdW5kPScjMWExMjQ2JyBUZXh0V3JhcHBpbmc9IldyYXAiID4KICAgICAgICAgICAgICAgICAgJE1lc3NhZ2VCbG9jawogICAgICAgIDwvVGV4dEJsb2NrPgogICAgICAgIDxTdGFja1BhbmVsIEdyaWQuQ29sdW1uPSIxIiBHcmlkLlJvdz0iMiIgT3JpZW50YXRpb249Ikhvcml6b250YWwiIEhvcml6b250YWxBbGlnbm1lbnQ9IlJpZ2h0IiA+CiAgICAgICAgICAgIDxCdXR0b24geDpOYW1lPSJCdXR0b24xIiBXaWR0aD0iMTAwIiBUb29sVGlwPSIkQnV0dG9uMVRvb2x0aXAiIE1hcmdpbj0iMCwwLDYwLDAiIEJhY2tncm91bmQ9IlRyYW5zcGFyZW50IiBGb3JlZ3JvdW5kPSIjMUExMjQ2IiBCb3JkZXJCcnVzaD0iIzFBMTI0NiIgRm9udFNpemU9IjIwIiBGb250V2VpZ2h0PSJOb3JtYWwiID4KICAgICAgICAgICAgICAgICA8QnV0dG9uLkNvbnRlbnQ+JEJ1dHRvbjFUZXh0PC9CdXR0b24uQ29udGVudD4KICAgICAgICAgICAgPC9CdXR0b24+CiAgICAgICAgICAgIDxCdXR0b24geDpOYW1lPSJCdXR0b24yIiBXaWR0aD0iMTAwIiBUb29sVGlwPSIkQnV0dG9uMlRvb2x0aXAiIE1hcmdpbj0iMCwwLDYwLDAiIEJhY2tncm91bmQ9IlRyYW5zcGFyZW50IiBGb3JlZ3JvdW5kPSIjMUExMjQ2IiBCb3JkZXJCcnVzaD0iIzFBMTI0NiIgRm9udFNpemU9IjIwIiBGb250V2VpZ2h0PSJOb3JtYWwiID4KICAgICAgICAgICAgICAgIDxCdXR0b24uQ29udGVudD4kQnV0dG9uMlRleHQ8L0J1dHRvbi5Db250ZW50PgogICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICA8L1N0YWNrUGFuZWw+CgogICAgICAgICAgICAgPEltYWdlIEdyaWQuQ29sdW1uPSIwIiBHcmlkLlJvdz0iMiIgR3JpZC5Sb3dTcGFuPSIyIiAgTWFyZ2luPSIxMCwzMCwwLDAiIEhvcml6b250YWxBbGlnbm1lbnQ9IkxlZnQiIEhlaWdodD0iMTAwIiAgVmVydGljYWxBbGlnbm1lbnQ9IlRvcCIgV2lkdGg9IjIwMCIgCiAgICAgICAgICAgICAgICAgeDpOYW1lPSJJbWFnZUxvZ28iIC8+IAogICAgICAgIDxUZXh0QmxvY2sgR3JpZC5Db2x1bW49IjEiIEdyaWQuUm93PSIzIiBNYXJnaW49IjEwLDIwLDQwLDAiIEhvcml6b250YWxBbGlnbm1lbnQ9IkxlZnQiPgogICAgICAgICAgICA8SHlwZXJsaW5rIHg6TmFtZT0iTGluayIgVGV4dERlY29yYXRpb25zPSJOb25lIiAgIAogICAgICAgICAgICAgICBOYXZpZ2F0ZVVyaT0iaHR0cHM6Ly93d3cuZm91cnRvcC5ubC9jb250YWN0Ij5Gb3VydG9wIFNlcnZpY2VkZXNrPC9IeXBlcmxpbms+CiAgICAgICAgPC9UZXh0QmxvY2s+CiAgICA8L0dyaWQ+CjwvV2luZG93PgoKIkAgCiNlbmRyZWdpb24KCiNyZWdpb24gTG9hZCBYQU1MIGludG8gUG93ZXJTaGVsbAokcmVhZGVyPShOZXctT2JqZWN0IFN5c3RlbS5YbWwuWG1sTm9kZVJlYWRlciAkeGFtbCkKJHVpSGFzaC5XaW5kb3c9W1dpbmRvd3MuTWFya3VwLlhhbWxSZWFkZXJdOjpMb2FkKCAkcmVhZGVyICkKCiNyZWdpb24gQ29ubmVjdCB0byBhbGwgY29udHJvbHMKW3htbF0kWEFNTCA9ICR4YW1sCiAgICAgICAgJHhhbWwuU2VsZWN0Tm9kZXMoIi8vKltAKltjb250YWlucyh0cmFuc2xhdGUobmFtZSguKSwnbicsJ04nKSwnTmFtZScpXV0iKSB8IEZvckVhY2gtT2JqZWN0ewogICAgICAgICNGaW5kIGFsbCBvZiB0aGUgZm9ybSB0eXBlcyBhbmQgYWRkIHRoZW0gYXMgbWVtYmVycyB0byB0aGUgc3luY2hhc2gKICAgICAgICAkdWlIYXNoLkFkZCgkXy5OYW1lLCR1aUhhc2guV2luZG93LkZpbmROYW1lKCRfLk5hbWUpICkKICAgIH0KCiAgICAgICAgJHVpSGFzaC5XaW5kb3cuSWNvbiA9ICRiaXRtYXBpY29uCiAgICAgICAgJHVpSGFzaC5JbWFnZUxvZ28uU291cmNlID0gICRiaXRtYXBsb2dvIAogICAgICAgICR1aUhhc2guV2luZG93LnRvcG1vc3QgPSAkdHJ1ZQoKCgpbU3lzdGVtLldpbmRvd3MuRm9ybXMuQXBwbGljYXRpb25dOjpFbmFibGVWaXN1YWxTdHlsZXMoKTsKCiNyZWdpb24gV2luZG93IENsb3NlIEV2ZW50cwojV2luZG93IENsb3NlIEV2ZW50cwoKI2VuZHJlZ2lvbgoKJGJ1dHRvbmNsaWNrZWQgPSAkZmFsc2UKCiR1aUhhc2guQnV0dG9uMS5BZGRfQ2xpY2soewokYnV0dG9uY2xpY2tlZCA9ICR0cnVlCiAgICBJbnZva2UtQ29tbWFuZCAtU2NyaXB0QmxvY2sgJEJ1dHRvbjFGdW5jdGlvbgogIH0pCgogIGlmKCRCdXR0b24yVGV4dCAtZXEgJE5VTEwpIHsKICAkdWlIYXNoLkJ1dHRvbjIuVmlzaWJpbGl0eT0iSGlkZGVuIgogIH0KJHVpSGFzaC5CdXR0b24yLkFkZF9DbGljayh7CiRidXR0b25jbGlja2VkID0gJHRydWUKIEludm9rZS1Db21tYW5kIC1TY3JpcHRCbG9jayAkQnV0dG9uMkZ1bmN0aW9uCiAgfSkKCiAgJHVpSGFzaC5MaW5rLkFkZF9DbGljayh7CiAgICBzdGFydCAkdWlIYXNoLkxpbmsuTmF2aWdhdGVVcmkuVG9TdHJpbmcoKQp9KQoKJHVpSGFzaC5XaW5kb3cuQWRkX0Nsb3NlZCh7CglpZiAoJGJ1dHRvbmNsaWNrZWQgLWVxICRmYWxzZSkgewogICAgSW52b2tlLUNvbW1hbmQgLVNjcmlwdEJsb2NrICRFeGl0RnVuY3Rpb24KICAgIH0KfSkgCgoKI1N0YXJ0IHRoZSBHVUkKCiR1aUhhc2guV2luZG93LlNob3dEaWFsb2coKSB8IE91dC1OdWxsCgp9CgokcnVuY291bnQgPSAwCiRyZW1pbmRlcnRleHQgPSAkbnVsbAojIyBWYW5hZiBoaWVyb25kZXIga3VubmVuIGRlIHZhcmlhYmxlbiB3b3JkZW4gYWFuZ2VwYXN0CiRnbG9iYWw6dGFhbCA9IChHZXQtV2luVXNlckxhbmd1YWdlTGlzdCkuTGFuZ3VhZ2VUYWcKJG5lZGVybGFuZHMgPSAibmwtTkwiCgpmdW5jdGlvbiBSZW1pbmRlcgp7CmlmICggJHJ1bmNvdW50IC1lcSAxKSB7Cgojc2V0IHJlbWluZGVyIGFmdGVyIDYwIG1pbnV0ZXMKV3JpdGUtSG9zdCAic2V0dGluZyBkZWxheSwgd2lsbCBwcm9tcHQgYWdhaW4gaW4gNjAgbWludXRlcyIKaWYoJHRhYWwgLWVxICRuZWRlcmxhbmRzKSB7CgojTmVkZXJsYW5zZSBQcm9tcHQKCkNyZWF0ZS1Gb3VydG9wRGlhbG9nIC1XaW5kb3dUaXRsZSAiQmVyaWNodCB2YW4gRm91cnRvcCBJQ1QiIGAKLVRpdGxlQmxvY2sgIlVpdGdlc3RlbGQiIGAKLU1lc3NhZ2VCbG9jayAiPExpbmVCcmVhay8+QmVkYW5rdCB2b29yIGplIHJlYWN0aWUsIEplIG9udHZhbmd0IHZhbiBvbnMgZWVuIHJlbWluZGVyIG92ZXIgZWVuIHV1cjxMaW5lQnJlYWsvPiIgYAotQnV0dG9uMVRleHQgIk9LImAKLUJ1dHRvbjFGdW5jdGlvbiAkYjQgYAotRXhpdEZ1bmN0aW9uICRiNAoKfSBlbHNlIHsgCgojRW5nZWxzZSBQcm9tcHQKCkNyZWF0ZS1Gb3VydG9wRGlhbG9nIC1XaW5kb3dUaXRsZSAiRm91cnRvcCBtZXNzYWdlIiBgCi1UaXRsZUJsb2NrICJQb3N0cG9uZWQiIGAKLU1lc3NhZ2VCbG9jayAiPExpbmVCcmVhay8+VGhhbmsgeW91IGZvciB5b3VyIHJlYWN0aW9uLCB3ZSB3aWxsIHNlbmQgeW91IGEgcmVtaW5kZXIgaW4gYW4gaG91ci48TGluZUJyZWFrLz4iIGAKLUJ1dHRvbjFUZXh0ICJPSyIgYAotQnV0dG9uMUZ1bmN0aW9uICRiNCBgCi1FeGl0RnVuY3Rpb24gJGI0Cgp9CnN0YXJ0LXNsZWVwIC1TZWNvbmRzIDM2MDAKJHJlbWluZGVydGV4dCA9ICJSZW1pbmRlcjoiCnNjcmVlbjEKCn0KZWxzZQp7CiNFbmQgcHJvbXB0cwpXcml0ZS1Ib3N0ICJBbHJlYWR5IHJlbWluZGVkIHRoZSB1c2VyLCBzY2hlZHVsZWQgcmVib290IGlzIGFib3J0ZWQgYnkgdXNlci4iCmV4aXQgMTAwMQp9Cn0KCmZ1bmN0aW9uIEJ1dHRvbjFGdW5jdGlvbgp7CiAgICAkdWlIYXNoLldpbmRvdy5DbG9zZSgpCiAgICBXcml0ZS1Ib3N0ICJCdXR0b24xIENsaWNrZWQiICAgIAogICAgU2h1dGRvd24uZXhlIC9yIC90IDEyMCAKICAgIHNjcmVlbjIKfQoKZnVuY3Rpb24gQnV0dG9uMkZ1bmN0aW9uCnsKICAgICR1aUhhc2guV2luZG93LkNsb3NlKCkKICAgIFdyaXRlLUhvc3QgIkJ1dHRvbjIgQ2xpY2tlZCIKICAgIFJlbWluZGVyCn0KCmZ1bmN0aW9uIEJ1dHRvbjNGdW5jdGlvbgp7CiAgICAkdWlIYXNoLldpbmRvdy5DbG9zZSgpCiAgICBXcml0ZS1Ib3N0ICJCdXR0b24zIENsaWNrZWQiCiAgICBXcml0ZS1ob3N0ICJTaHV0ZG93biBzY2hlZHVsZWQgaW4gMiBtaW51dGVzLCBjbG9zaW5nIHNjcmlwdCIKCn0KCmZ1bmN0aW9uIEJ1dHRvbjRGdW5jdGlvbgp7CiAgICAkdWlIYXNoLldpbmRvdy5DbG9zZSgpCiAgICBXcml0ZS1Ib3N0ICJCdXR0b240IENsaWNrZWQiCiAgICBXcml0ZS1ob3N0ICJDbG9zaW5nIG5vdGlmaWNhdGlvbiIKfQoKZnVuY3Rpb24gRXhpdEZ1bmN0aW9uCnsKICAgICR1aUhhc2guV2luZG93LkNsb3NlKCkKICAgIFdyaXRlLUhvc3QgIkV4aXRGdW5jdGlvbiB0cmlnZ2VyVCIKICAgIHNodXRkb3duLmV4ZSAvYQogICAgUmVtaW5kZXIKfQoKJGIxPVtTY3JpcHRCbG9ja106OkNyZWF0ZSgnQnV0dG9uMUZ1bmN0aW9uJykKJGIyPVtTY3JpcHRCbG9ja106OkNyZWF0ZSgnQnV0dG9uMkZ1bmN0aW9uJykKJGIzPVtTY3JpcHRCbG9ja106OkNyZWF0ZSgnQnV0dG9uM0Z1bmN0aW9uJykKJGI0PVtTY3JpcHRCbG9ja106OkNyZWF0ZSgnQnV0dG9uNEZ1bmN0aW9uJykKJGV4PVtTY3JpcHRCbG9ja106OkNyZWF0ZSgnRXhpdEZ1bmN0aW9uJykKCmZ1bmN0aW9uIHNjcmVlbjEKewokR2xvYmFsOnJ1bmNvdW50KysKaWYoJHRhYWwgLWVxICRuZWRlcmxhbmRzKSB7CgojTmVkZXJsYW5zZSBQcm9tcHQKCkNyZWF0ZS1Gb3VydG9wRGlhbG9nIC1XaW5kb3dUaXRsZSAiQmVyaWNodCB2YW4gRm91cnRvcCBJQ1QiIGAKLVRpdGxlQmxvY2sgIiRyZW1pbmRlcnRleHQgVmVyem9layB0b3QgaGVyc3RhcnRlbiB2YW4gUEMiIGAKLU1lc3NhZ2VCbG9jayAiPExpbmVCcmVhay8+R29lZGVuZGFnISAtIG5hbWVucyBkZSBTZXJ2aWNlZGVzayB2YW4gRm91cnRvcCBJQ1Q8TGluZUJyZWFrLz48TGluZUJyZWFrLz4gSmUgUEMgc3RhYXQgYWwgdHdlZSB3ZWtlbiBhYW4gZW4gdm9vciBvcHRpbWFhbCBnZWJydWlrIGFkdmlzZXJlbiB3ZSBqZSB0ZSBoZXJzdGFydGVuLjxMaW5lQnJlYWsvPjxMaW5lQnJlYWsvPkJpaiBkZSBvcHRpZSAnSmEnIHphbCBqZSBQQyBvdmVyIDIgbWludXRlbiBvcG5pZXV3IG9wZ2VzdGFydCB3b3JkZW4gem9kYXQgamUgaGV0IG9wZW5zdGFhbmRlIHdlcmsga3VudCBvcHNsYWFuLiIgYAotQnV0dG9uMVRleHQgIkphIiAtQnV0dG9uMVRvb2x0aXAgIkJpaiBkZSBvcHRpZSBqYSB6YWwgamUgUEMgb3ZlciAyIG1pbnV0ZW4gb3BuaWV1dyBvcGdlc3RhcnQgd29yZGVuIHpvZGF0IGplIGhldCBvcGVuc3RhYW5kZSB3ZXJrIGt1bnQgb3BzbGFhbi4iYAotQnV0dG9uMlRleHQgIk5lZSIgLUJ1dHRvbjJUb29sdGlwICJCaWogZGUgb3B0aWUgbmVlIHphbCBkZSBQQyBuaWV0IG9wbmlldXcgd29yZGVuIG9wZ2VzdGFydCJgCi1CdXR0b24xRnVuY3Rpb24gJGIxIGAKLUJ1dHRvbjJGdW5jdGlvbiAkYjIgYAotRXhpdEZ1bmN0aW9uICRleAoKfSBlbHNlIHsgCgojRW5nZWxzZSBQcm9tcHQKCkNyZWF0ZS1Gb3VydG9wRGlhbG9nIC1XaW5kb3dUaXRsZSAiRm91cnRvcCBtZXNzYWdlIiBgCi1UaXRsZUJsb2NrICIkcmVtaW5kZXJ0ZXh0IFJlcXVlc3QgdG8gcmVib290IHlvdXIgY29tcHV0ZXIiIGAKLU1lc3NhZ2VCbG9jayAiPExpbmVCcmVhay8+SGVsbG8hIC0gT24gYmVoYWxmIG9mIHRoZSBTZXJ2aWNlZGVzayBvZiBGb3VydG9wIElDVDxMaW5lQnJlYWsvPjxMaW5lQnJlYWsvPiBZb3VyIFBDIGhhc24ndCBiZWVuIHJlc3RhcnRlZCBmb3IgdHdvIHdlZWtzIGFuZCBmb3Igb3B0aW1hbCBwZXJmb3JtYW5jZSB3ZSByZWNvbW1lbmQgdGhhdCB5b3UgcmVzdGFydCBub3cuPExpbmVCcmVhay8+PExpbmVCcmVhay8+SWYgeW91IGNob29zZSB0aGUgb3B0aW9uICdZZXMnIHlvdXIgUEMgd2lsbCByZWJvb3QgYWZ0ZXIgMiBtaW51dGVzIHNvIHRoZXJlIGlzIHN0aWxsIHRpbWUgdG8gc2F2ZSB5b3VyIHdvcmsuIiBgCi1CdXR0b24xVGV4dCAiWWVzIiAtQnV0dG9uMVRvb2x0aXAgIklmIHlvdSBjaG9vc2UgJ1llcycgeW91ciBjb21wdXRlciB3aWxsIHJlYm9vdCBhZnRlciAyIG1pbnV0ZXMgc28gdGhlcmUgaXMgc3RpbGwgdGltZSB0byBzYXZlIHlvdXIgd29yay4iYAotQnV0dG9uMlRleHQgIk5vIiAtQnV0dG9uMlRvb2x0aXAgIklmIHlvdSBjaG9vc2UgJ05vJyB0aGUgY29tcHV0ZXIgd2lsbCBub3QgYmUgcmVib290ZWQuImAKLUJ1dHRvbjFGdW5jdGlvbiAkYjEgYAotQnV0dG9uMkZ1bmN0aW9uICRiMiBgCi1FeGl0RnVuY3Rpb24gJGV4Cgp9Cgp9CgpmdW5jdGlvbiBzY3JlZW4yCnsKaWYoJHRhYWwgLWVxICRuZWRlcmxhbmRzKSB7CgojTmVkZXJsYW5zZSBQcm9tcHQKCkNyZWF0ZS1Gb3VydG9wRGlhbG9nIC1XaW5kb3dUaXRsZSAiQmVyaWNodCB2YW4gRm91cnRvcCBJQ1QiIGAKLVRpdGxlQmxvY2sgIkhlcnN0YXJ0IEJldmVzdGlnZCIgYAotTWVzc2FnZUJsb2NrICI8TGluZUJyZWFrLz5EZXplIGNvbXB1dGVyIHphbCBiaW5uZW4gMiBtaW51dGVuIG9wbmlldXcgb3BzdGFydGVuPExpbmVCcmVhay8+PExpbmVCcmVhay8+IE9tIHRlIGFubnVsZXJlbiBrbGlrIGRpdCB2ZW5zdGVyIHdlZyBvZiBrbGlrIG9wICdBbm51bGVlciBIZXJzdGFydCciIGAKLUJ1dHRvbjFUZXh0ICJPa2UiICAtQnV0dG9uMVRvb2x0aXAgIlNsdWl0IGRlemUgbWVsZGluZyJgCi1CdXR0b24xRnVuY3Rpb24gJGIzIGAKLUJ1dHRvbjJUZXh0ICJBbm51bGVlciIgLUJ1dHRvbjJUb29sdGlwICJBbm51bGVlciBkZSBoZXJzdGFydCB2YW4gZGUgY29tcHV0ZXIiIGAKLUJ1dHRvbjJGdW5jdGlvbiAkZXggYAotRXhpdEZ1bmN0aW9uICRleAoKCn0gZWxzZSB7IAoKI0VuZ2Vsc2UgUHJvbXB0CgpDcmVhdGUtRm91cnRvcERpYWxvZyAtV2luZG93VGl0bGUgIkZvdXJ0b3AgbWVzc2FnZSIgYAotVGl0bGVCbG9jayAiYFJlYm9vdCBjb25maXJtZWQiIGAKLU1lc3NhZ2VCbG9jayAiPExpbmVCcmVhay8+VGhpcyBjb21wdXRlciB3aWxsIHJlYm9vdCBpbiBsZXNzIHRoZW4gMiBtaW51dGVzPExpbmVCcmVhay8+PExpbmVCcmVhay8+IFRvIGFib3J0IHRoZSBwbGFubmVkIHJlYm9vdCBjbGljayBvbiAnQWJvcnQgUmVib290JyBvciBjbG9zZSB0aGlzIHdpbmRvdyIgYAotQnV0dG9uMVRleHQgIk9rIiAtQnV0dG9uMVRvb2x0aXAgIkNsb3NlIHRoaXMgd2luZG93IiBgCi1CdXR0b24xRnVuY3Rpb24gJGIzIGAKLUJ1dHRvbjJUZXh0ICJBYm9ydCIgLUJ1dHRvbjJUb29sdGlwICJBYm9ydCBSZWJvb3QiIGAKLUJ1dHRvbjJGdW5jdGlvbiAkZXggYAotRXhpdEZ1bmN0aW9uICRleAp9Cn0Kc2NyZWVuMQ=="
    $script = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("$scriptencoded"))
    $script | Out-File -Force -FilePath $scriptfile
}

function Create-Scheduledtask {
    $global:taskname = "Fourtop Reboot Reminder"
    $Minutes = "1"
    $timetask = (Get-Date).AddMinutes(+$Minutes).ToString("HH:mm")

    $Time = New-ScheduledTaskTrigger -At $timetask -Once
    $User = (Get-WMIObject -class Win32_ComputerSystem | select username).username
    $PS = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -WindowStyle Hidden -NoProfile -file $scriptfile"
    $settings = New-ScheduledTaskSettingsSet -Compatibility V1 -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
    Register-ScheduledTask -TaskName $taskname -Trigger $Time -Settings $settings -User $User -Action $PS -RunLevel Highest -Force
}

function Remove-Scheduledtask {
    Unregister-ScheduledTask -TaskName $taskname -Confirm:$false
}

Function Get-Taskstatus {
    $Result = (Get-ScheduledTaskInfo -TaskName "\$taskname").LastTaskResult
    while ($Result -ne "0") {
        write-Host "Task $taskname still running"
        start-sleep -Seconds 180
        $Result = (Get-ScheduledTaskInfo -TaskName "\$taskname").LastTaskResult
    }
    remove-scheduledtask
    Remove-Item -Path $scriptfile -Force
    exit 0
}
Create-Scriptfile
Create-Scheduledtask
Get-Taskstatus

#Remove-Scheduledtask